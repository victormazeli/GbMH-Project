name: Build on PR

on:
    pull_request:
        branches:
            - '*'

    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PRISMA_HOST_DEV: ${{ secrets.PRISMA_HOST_DEV }}
      PRISMA_HOST_PROD: ${{ secrets.PRISMA_HOST_PROD }}
      PRISMA_MANAGEMENT_API_SECRET: ${{ secrets.PRISMA_MGT_SECRET }}
      APP_NAMESPACE_DEV: ${{ secrets.APP_NAMESPACE_DEV }}
      APP_NAMESPACE_PROD: ${{ secrets.APP_NAMESPACE_PROD }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_REGISTRY: ${{secrets.DOCKER_REGISTRY}}
      CONTAINER_NAME: ${{secrets.CONTAINER_NAME}}
      CONTAINER_PORT: ${{secrets.CONTAINER_PORT}}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

    #   - name: Set up Node.js
    #     uses: actions/setup-node@v4
    #     with:
    #       node-version: '14'

    #   - name: Install Prisma 1
    #     run: npm install -g prisma1 

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 'stable'

      - name: Upload Artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: code-bundle
          path: code_bundle.zip
          
    #   - name: Install Dependencies && Check Go Modules
    #     run: make install-deps

    #   - name: Remove previously installed Gqlgen package
    #     run: make remove-packages

    #   - name: Debug Info
    #     run: |
    #       echo "GitHub Ref: ${{ github.ref }}"
    #       echo "Event Name: ${{ github.event_name }}"
    #       echo "Base Ref: ${{ github.base_ref }}"
    #       echo "Head Ref: ${{ github.head_ref }}"
      

    #   - name: Generate prisma models, Prisma deploy && Sync prisma dev server
    #     if: ${{ github.base_ref == 'develop'}}
    #     run: make generate-dev && make migrate
    
    #   - name: Generate prisma models, Prisma deploy && Sync prisma prod server
    #     if: ${{ github.base_ref == 'main'}}
    #     run: make generate-prod && make migrate

    #   - name: Build Docker Image For dev && Push Artifact
    #     if: ${{ github.base_ref == 'develop'}}
    #     run: |
    #      docker build -t $DOCKER_REGISTRY/$CONTAINER_NAME:dev \
    #      --build-arg PRISMA_HOST=$PRISMA_HOST_DEV \
    #      --build-arg PORT=$CONTAINER_PORT \
    #      --build-arg APP_NAMESPACE=$APP_NAMESPACE_DEV \
    #      --build-arg PRISMA_SECRET=$PRISMA_MANAGEMENT_API_SECRET \
    #      -f ./docker/main.dockerfile .
      
    #       docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY
    #       docker push $DOCKER_REGISTERY/$CONTAINER_NAME:dev
     
    #   - name: Build Docker Image For prod && Push Artifact
    #     if: ${{ github.base_ref == 'main'}}
    #     run: |
    #        docker build -t $DOCKER_REGISTRY/$CONTAINER_NAME:latest \
    #        --build-arg PRISMA_HOST=$PRISMA_HOST_PROD \
    #        --build-arg PORT=$CONTAINER_PORT \
    #        --build-arg APP_NAMESPACE=$APP_NAMESPACE_PROD \
    #        --build-arg PRISMA_SECRET=$PRISMA_MANAGEMENT_API_SECRET \
    #        -f ./docker/main.dockerfile .
        
    #         docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY
    #         docker push $DOCKER_REGISTERY/$CONTAINER_NAME:latest



