// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/steebchen/keskin-api/api"
	appointment3 "github.com/steebchen/keskin-api/api/resolver/appointment"
	branch3 "github.com/steebchen/keskin-api/api/resolver/branch"
	company3 "github.com/steebchen/keskin-api/api/resolver/company"
	email_template3 "github.com/steebchen/keskin-api/api/resolver/email_template"
	favorite3 "github.com/steebchen/keskin-api/api/resolver/favorite"
	"github.com/steebchen/keskin-api/api/resolver/mutation"
	"github.com/steebchen/keskin-api/api/resolver/mutation/appointment"
	"github.com/steebchen/keskin-api/api/resolver/mutation/auth"
	"github.com/steebchen/keskin-api/api/resolver/mutation/branch"
	"github.com/steebchen/keskin-api/api/resolver/mutation/company"
	"github.com/steebchen/keskin-api/api/resolver/mutation/email_template"
	"github.com/steebchen/keskin-api/api/resolver/mutation/favorite"
	"github.com/steebchen/keskin-api/api/resolver/mutation/mailchimp"
	"github.com/steebchen/keskin-api/api/resolver/mutation/news"
	"github.com/steebchen/keskin-api/api/resolver/mutation/notification"
	"github.com/steebchen/keskin-api/api/resolver/mutation/product"
	"github.com/steebchen/keskin-api/api/resolver/mutation/product_category"
	"github.com/steebchen/keskin-api/api/resolver/mutation/product_sub_category"
	"github.com/steebchen/keskin-api/api/resolver/mutation/review"
	"github.com/steebchen/keskin-api/api/resolver/mutation/service"
	"github.com/steebchen/keskin-api/api/resolver/mutation/service_category"
	"github.com/steebchen/keskin-api/api/resolver/mutation/service_sub_category"
	"github.com/steebchen/keskin-api/api/resolver/mutation/user/administrator"
	"github.com/steebchen/keskin-api/api/resolver/mutation/user/customer"
	"github.com/steebchen/keskin-api/api/resolver/mutation/user/employee"
	"github.com/steebchen/keskin-api/api/resolver/mutation/user/manager"
	"github.com/steebchen/keskin-api/api/resolver/mutation/user/viewer"
	news2 "github.com/steebchen/keskin-api/api/resolver/news"
	product3 "github.com/steebchen/keskin-api/api/resolver/product"
	product_category3 "github.com/steebchen/keskin-api/api/resolver/product_category"
	"github.com/steebchen/keskin-api/api/resolver/product_service_attribute"
	product_sub_category3 "github.com/steebchen/keskin-api/api/resolver/product_sub_category"
	"github.com/steebchen/keskin-api/api/resolver/query"
	appointment2 "github.com/steebchen/keskin-api/api/resolver/query/appointment"
	branch2 "github.com/steebchen/keskin-api/api/resolver/query/branch"
	company2 "github.com/steebchen/keskin-api/api/resolver/query/company"
	customer2 "github.com/steebchen/keskin-api/api/resolver/query/customer"
	email_template2 "github.com/steebchen/keskin-api/api/resolver/query/email_template"
	employee2 "github.com/steebchen/keskin-api/api/resolver/query/employee"
	favorite2 "github.com/steebchen/keskin-api/api/resolver/query/favorite"
	"github.com/steebchen/keskin-api/api/resolver/query/order_history"
	"github.com/steebchen/keskin-api/api/resolver/query/password_token"
	product2 "github.com/steebchen/keskin-api/api/resolver/query/product"
	product_category2 "github.com/steebchen/keskin-api/api/resolver/query/product_category"
	product_sub_category2 "github.com/steebchen/keskin-api/api/resolver/query/product_sub_category"
	review2 "github.com/steebchen/keskin-api/api/resolver/query/review"
	service2 "github.com/steebchen/keskin-api/api/resolver/query/service"
	service_category2 "github.com/steebchen/keskin-api/api/resolver/query/service_category"
	service_sub_category2 "github.com/steebchen/keskin-api/api/resolver/query/service_sub_category"
	"github.com/steebchen/keskin-api/api/resolver/query/staff"
	"github.com/steebchen/keskin-api/api/resolver/query/timeslots"
	review3 "github.com/steebchen/keskin-api/api/resolver/review"
	"github.com/steebchen/keskin-api/api/resolver/review/appointment_review"
	"github.com/steebchen/keskin-api/api/resolver/review/product_review"
	"github.com/steebchen/keskin-api/api/resolver/review/service_review"
	"github.com/steebchen/keskin-api/api/resolver/root"
	service3 "github.com/steebchen/keskin-api/api/resolver/service"
	service_category3 "github.com/steebchen/keskin-api/api/resolver/service_category"
	service_sub_category3 "github.com/steebchen/keskin-api/api/resolver/service_sub_category"
	"github.com/steebchen/keskin-api/api/resolver/user"
	administrator2 "github.com/steebchen/keskin-api/api/resolver/user/administrator"
	customer3 "github.com/steebchen/keskin-api/api/resolver/user/customer"
	employee3 "github.com/steebchen/keskin-api/api/resolver/user/employee"
	manager2 "github.com/steebchen/keskin-api/api/resolver/user/manager"
	"github.com/steebchen/keskin-api/handlers/share/gallery"
	review4 "github.com/steebchen/keskin-api/handlers/share/review"
	"github.com/steebchen/keskin-api/handlers/template/index"
	"github.com/steebchen/keskin-api/handlers/template/webmanifest"
	"github.com/steebchen/keskin-api/prisma"
	"github.com/steebchen/keskin-api/server"
)

// Injectors from wire.go:

func Initialize() (*server.Server, error) {
	options, err := prisma.NewConfig()
	if err != nil {
		return nil, err
	}
	client, err := prisma.NewClient(options)
	if err != nil {
		return nil, err
	}
	authAuth := auth.New(client)
	app, err := server.NewFirebaseApp()
	if err != nil {
		return nil, err
	}
	messagingClient, err := server.NewFirebaseMessagingClient(app)
	if err != nil {
		return nil, err
	}
	appointmentAppointment := appointment.New(client, messagingClient)
	branchMutation := branch.New(client)
	companyMutation := company.New(client)
	productCategoryMutation := product_category.New(client)
	productSubCategoryMutation := product_sub_category.New(client)
	serviceCategoryMutation := service_category.New(client)
	serviceSubCategoryMutation := service_sub_category.New(client)
	customerMutation := customer.New(client)
	employeeMutation := employee.New(client)
	productMutation := product.New(client)
	serviceMutation := service.New(client)
	viewerMutation := viewer.New(client)
	favoriteMutation := favorite.New(client)
	notificationNotification := notification.New(client, messagingClient)
	newsMutation := news.New(client)
	emailTemplateMutation := email_template.New(client)
	reviewMutation := review.New(client)
	administratorMutation := administrator.New(client)
	managerMutation := manager.New(client)
	mailchimpMutation := mailchimp.New(client)
	mutationMutation := mutation.New(client, authAuth, appointmentAppointment, branchMutation, companyMutation, productCategoryMutation, productSubCategoryMutation, serviceCategoryMutation, serviceSubCategoryMutation, customerMutation, employeeMutation, productMutation, serviceMutation, viewerMutation, favoriteMutation, notificationNotification, newsMutation, emailTemplateMutation, reviewMutation, administratorMutation, managerMutation, mailchimpMutation)
	appointmentQuery := appointment2.New(client)
	branchQuery := branch2.New(client)
	customerQuery := customer2.New(client)
	productCategoryQuery := product_category2.New(client)
	productSubCategoryQuery := product_sub_category2.New(client)
	serviceCategoryQuery := service_category2.New(client)
	serviceSubCategoryQuery := service_sub_category2.New(client)
	employeeQuery := employee2.New(client)
	productQuery := product2.New(client)
	serviceQuery := service2.New(client)
	staffQuery := staff.New(client)
	timeslotsQuery := timeslots.New(client)
	reviewQuery := review2.New(client)
	orderHistoryQuery := order_history.New(client)
	favoriteQuery := favorite2.New(client)
	emailTemplateQuery := email_template2.New(client)
	companyQuery := company2.New(client)
	passwordTokenQuery := password_token.New(client)
	queryQuery := query.New(client, appointmentQuery, branchQuery, customerQuery, productCategoryQuery, productSubCategoryQuery, serviceCategoryQuery, serviceSubCategoryQuery, employeeQuery, productQuery, serviceQuery, staffQuery, timeslotsQuery, reviewQuery, orderHistoryQuery, favoriteQuery, emailTemplateQuery, companyQuery, passwordTokenQuery)
	employeeEmployee := employee3.New(client)
	customerCustomer := customer3.New(client)
	managerManager := manager2.New(client)
	administratorAdministrator := administrator2.New(client)
	userUser := user.New(client, employeeEmployee, customerCustomer, managerManager, administratorAdministrator)
	appointment4 := appointment3.New(client)
	branchBranch := branch3.New(client)
	productCategory := product_category3.New(client)
	productSubCategory := product_sub_category3.New(client)
	serviceCategory := service_category3.New(client)
	serviceSubCategory := service_sub_category3.New(client)
	companyCompany := company3.New(client)
	productProduct := product3.New(client)
	serviceService := service3.New(client)
	productReview := product_review.New(client)
	serviceReview := service_review.New(client)
	appointmentReview := appointment_review.New(client)
	reviewReview := review3.New(client, productReview, serviceReview, appointmentReview)
	favoriteFavorite := favorite3.New(client)
	newsNews := news2.New(client)
	emailTemplate := email_template3.New(client)
	productServiceAttribute := product_service_attribute.New(client)
	resolver := root.New(client, mutationMutation, queryQuery, userUser, appointment4, branchBranch, productCategory, productSubCategory, serviceCategory, serviceSubCategory, companyCompany, productProduct, serviceService, reviewReview, favoriteFavorite, newsNews, emailTemplate, productServiceAttribute)
	handler := api.New(client, resolver)
	reviewHandler := review4.New(client)
	galleryHandler := gallery.New(client)
	indexHandler := index.New(client)
	webmanifestHandler := webmanifest.New(client)
	config, err := server.NewConfig()
	if err != nil {
		return nil, err
	}
	serveMux := server.NewServeMux(handler, reviewHandler, galleryHandler, indexHandler, webmanifestHandler, config)
	cron := server.NewCronJobs(client, messagingClient)
	serverServer := server.NewServer(serveMux, config, cron)
	return serverServer, nil
}
