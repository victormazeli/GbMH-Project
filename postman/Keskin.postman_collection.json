{
	"info": {
		"_postman_id": "f8c397a2-5fc5-4870-a1b9-7bcea3d842f3",
		"name": "Keskin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Queries",
			"item": [
				{
					"name": "Companies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('defaultCompany', jsonData.data.companies.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    companies {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            logo {\r\n                id\r\n                url\r\n            }\r\n            appTheme\r\n            sharingRedirectUrl\r\n            pwaShortName\r\n            pwaIcon {\r\n                id\r\n                url\r\n            }\r\n            pwaThemeColor\r\n            pwaBackgroundColor\r\n            branches {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    name\r\n                    welcomeMessage\r\n                    phoneNumber {\r\n                        raw\r\n                        href\r\n                    }\r\n                    address\r\n                    image {\r\n                        id\r\n                        url\r\n                    }\r\n                    logo {\r\n                        id\r\n                        url\r\n                    }\r\n                    appTheme\r\n                    sharingRedirectUrl\r\n                    imprint\r\n                    # company\r\n                    openingHours {\r\n                        formatted {\r\n                            key\r\n                            closed\r\n                            break\r\n                            shortDay\r\n                            fullDay\r\n                            value\r\n                        }\r\n                        raw {\r\n                            day\r\n                            closed\r\n                            break\r\n                            shortDay\r\n                            fullDay\r\n                            forenoon {\r\n                                start\r\n                                end\r\n                            }\r\n                            afternoon {\r\n                                start\r\n                                end\r\n                            }\r\n                        }\r\n                    }\r\n                    reviewAggregations {\r\n                        totalCount\r\n                        averageRating\r\n                        countPerStar\r\n                    }\r\n                    reviews {\r\n                        nodes {\r\n                            id\r\n                            createdAt\r\n                            updatedAt\r\n                            stars\r\n                            title\r\n                            text\r\n                            type\r\n                            status\r\n                            customer {\r\n                                type\r\n                                id\r\n                                image {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                createdAt\r\n                                updatedAt\r\n                                email\r\n                                firstName\r\n                                lastName\r\n                                fullName\r\n                                gender\r\n                                note\r\n                                phoneNumber {\r\n                                    raw\r\n                                    href\r\n                                }\r\n                                appointments {\r\n                                    nodes {\r\n                                        id\r\n                                        createdAt\r\n                                        updatedAt\r\n                                        desc\r\n                                        start\r\n                                        end\r\n                                        price {\r\n                                            value\r\n                                            displayValue\r\n                                        }\r\n                                        duration\r\n                                        status\r\n                                        note\r\n                                        beforeImage {\r\n                                            id\r\n                                            url\r\n                                        }\r\n                                        afterImage {\r\n                                            id\r\n                                            url\r\n                                        }\r\n                                        employee {\r\n                                            type\r\n                                            id\r\n                                            image {\r\n                                                id\r\n                                                url\r\n                                            }\r\n                                            createdAt\r\n                                            updatedAt\r\n                                            email\r\n                                            firstName\r\n                                            lastName\r\n                                            fullName\r\n                                            gender\r\n                                            phoneNumber {\r\n                                                raw\r\n                                                href\r\n                                            }\r\n                                            # appointments\r\n                                        }\r\n                                        # customer\r\n                                    }\r\n                                }\r\n                                # reviews\r\n                            }\r\n                            appointment {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Related companies as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    relatedCompanies(\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    ) {\n        isAdmin\n        companies {\n            id\n            createdAt\n            updatedAt\n            name\n            logo {\n                id\n                url\n            }\n            appTheme\n            sharingRedirectUrl\n            branches {\n                nodes {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    welcomeMessage\n                    phoneNumber {\n                        raw\n                        href\n                    }\n                    address\n                    image {\n                        id\n                        url\n                    }\n                    logo {\n                        id\n                        url\n                    }\n                    appTheme\n                    sharingRedirectUrl\n                    imprint\n                    # company\n                    openingHours {\n                        formatted {\n                            key\n                            closed\n                            break\n                            shortDay\n                            fullDay\n                            value\n                        }\n                        raw {\n                            day\n                            closed\n                            break\n                            shortDay\n                            fullDay\n                            forenoon {\n                                start\n                                end\n                            }\n                            afternoon {\n                                start\n                                end\n                            }\n                        }\n                    }\n                    reviewAggregations {\n                        totalCount\n                        averageRating\n                        countPerStar\n                    }\n                    reviews {\n                        nodes {\n                            id\n                            createdAt\n                            updatedAt\n                            stars\n                            title\n                            text\n                            type\n                            status\n                            customer {\n                                type\n                                id\n                                image {\n                                    id\n                                    url\n                                }\n                                createdAt\n                                updatedAt\n                                email\n                                firstName\n                                lastName\n                                fullName\n                                gender\n                                note\n                                phoneNumber {\n                                    raw\n                                    href\n                                }\n                                appointments {\n                                    nodes {\n                                        id\n                                        createdAt\n                                        updatedAt\n                                        desc\n                                        start\n                                        end\n                                        price {\n                                            value\n                                            displayValue\n                                        }\n                                        duration\n                                        status\n                                        note\n                                        beforeImage {\n                                            id\n                                            url\n                                        }\n                                        afterImage {\n                                            id\n                                            url\n                                        }\n                                        employee {\n                                            type\n                                            id\n                                            image {\n                                                id\n                                                url\n                                            }\n                                            createdAt\n                                            updatedAt\n                                            email\n                                            firstName\n                                            lastName\n                                            fullName\n                                            gender\n                                            phoneNumber {\n                                                raw\n                                                href\n                                            }\n                                            # appointments\n                                        }\n                                        # customer\n                                    }\n                                }\n                                # reviews\n                            }\n                            appointment {\n                                id\n                                createdAt\n                                updatedAt\n                                desc\n                                start\n                                end\n                                price {\n                                    value\n                                    displayValue\n                                }\n                                duration\n                                status\n                                note\n                                beforeImage {\n                                    id\n                                    url\n                                }\n                                afterImage {\n                                    id\n                                    url\n                                }\n                                employee {\n                                    type\n                                    id\n                                    image {\n                                        id\n                                        url\n                                    }\n                                    createdAt\n                                    updatedAt\n                                    email\n                                    firstName\n                                    lastName\n                                    fullName\n                                    gender\n                                    phoneNumber {\n                                        raw\n                                        href\n                                    }\n                                    # appointments\n                                }\n                                # customer\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Related companies as administrator",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    relatedCompanies(\n        email: \"admin@example.com\"\n        password: \"asdfasdf\"\n    ) {\n        isAdmin\n        companies {\n            id\n            createdAt\n            updatedAt\n            name\n            logo {\n                id\n                url\n            }\n            appTheme\n            sharingRedirectUrl\n            branches {\n                nodes {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    welcomeMessage\n                    phoneNumber {\n                        raw\n                        href\n                    }\n                    address\n                    image {\n                        id\n                        url\n                    }\n                    logo {\n                        id\n                        url\n                    }\n                    appTheme\n                    sharingRedirectUrl\n                    imprint\n                    # company\n                    openingHours {\n                        formatted {\n                            key\n                            closed\n                            break\n                            shortDay\n                            fullDay\n                            value\n                        }\n                        raw {\n                            day\n                            closed\n                            break\n                            shortDay\n                            fullDay\n                            forenoon {\n                                start\n                                end\n                            }\n                            afternoon {\n                                start\n                                end\n                            }\n                        }\n                    }\n                    reviewAggregations {\n                        totalCount\n                        averageRating\n                        countPerStar\n                    }\n                    reviews {\n                        nodes {\n                            id\n                            createdAt\n                            updatedAt\n                            stars\n                            title\n                            text\n                            type\n                            status\n                            customer {\n                                type\n                                id\n                                image {\n                                    id\n                                    url\n                                }\n                                createdAt\n                                updatedAt\n                                email\n                                firstName\n                                lastName\n                                fullName\n                                gender\n                                note\n                                phoneNumber {\n                                    raw\n                                    href\n                                }\n                                appointments {\n                                    nodes {\n                                        id\n                                        createdAt\n                                        updatedAt\n                                        desc\n                                        start\n                                        end\n                                        price {\n                                            value\n                                            displayValue\n                                        }\n                                        duration\n                                        status\n                                        note\n                                        beforeImage {\n                                            id\n                                            url\n                                        }\n                                        afterImage {\n                                            id\n                                            url\n                                        }\n                                        employee {\n                                            type\n                                            id\n                                            image {\n                                                id\n                                                url\n                                            }\n                                            createdAt\n                                            updatedAt\n                                            email\n                                            firstName\n                                            lastName\n                                            fullName\n                                            gender\n                                            phoneNumber {\n                                                raw\n                                                href\n                                            }\n                                            # appointments\n                                        }\n                                        # customer\n                                    }\n                                }\n                                # reviews\n                            }\n                            appointment {\n                                id\n                                createdAt\n                                updatedAt\n                                desc\n                                start\n                                end\n                                price {\n                                    value\n                                    displayValue\n                                }\n                                duration\n                                status\n                                note\n                                beforeImage {\n                                    id\n                                    url\n                                }\n                                afterImage {\n                                    id\n                                    url\n                                }\n                                employee {\n                                    type\n                                    id\n                                    image {\n                                        id\n                                        url\n                                    }\n                                    createdAt\n                                    updatedAt\n                                    email\n                                    firstName\n                                    lastName\n                                    fullName\n                                    gender\n                                    phoneNumber {\n                                        raw\n                                        href\n                                    }\n                                    # appointments\n                                }\n                                # customer\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Company",
								"value": "{{defaultCompany}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"if (jsonData.data.currentCompany) {\r",
									"    postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"    postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)\r",
									"    postman.setEnvironmentVariable('currentBranchName', jsonData.data.currentCompany.branches.nodes[0].name)\r",
									"    postman.setEnvironmentVariable('currentBranchAddress', jsonData.data.currentCompany.branches.nodes[0].address)\r",
									"    postman.setEnvironmentVariable('currentBranchPhoneNumber', jsonData.data.currentCompany.branches.nodes[0].phoneNumber.raw)\r",
									"    postman.setEnvironmentVariable('currentBranchOpeningHoursDay', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].day)\r",
									"    postman.setEnvironmentVariable('currentBranchOpeningHoursClosed', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].closed)\r",
									"    postman.setEnvironmentVariable('currentBranchOpeningHoursBreak', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].break)\r",
									"    postman.setEnvironmentVariable('currentBranchOpeningHoursForenoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon))\r",
									"    postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).start)\r",
									"    postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).end)\r",
									"    postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon))\r",
									"    postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).start)\r",
									"    postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).end)\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n                reviewAggregations {\n                    totalCount\n                    averageRating\n                    countPerStar\n                }\n                reviews {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        stars\n                        title\n                        text\n                        type\n                        status\n                        customer {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            note\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            appointments {\n                                nodes {\n                                    id\n                                    createdAt\n                                    updatedAt\n                                    desc\n                                    start\n                                    end\n                                    price {\n                                        value\n                                        displayValue\n                                    }\n                                    duration\n                                    status\n                                    note\n                                    beforeImage {\n                                        id\n                                        url\n                                    }\n                                    afterImage {\n                                        id\n                                        url\n                                    }\n                                    employee {\n                                        type\n                                        id\n                                        image {\n                                            id\n                                            url\n                                        }\n                                        createdAt\n                                        updatedAt\n                                        email\n                                        firstName\n                                        lastName\n                                        fullName\n                                        gender\n                                        phoneNumber {\n                                            raw\n                                            href\n                                        }\n                                        # appointments\n                                    }\n                                    # customer\n                                }\n                            }\n                            # reviews\n                        }\n                        appointment {\n                            id\n                            createdAt\n                            updatedAt\n                            desc\n                            start\n                            end\n                            price {\n                                value\n                                displayValue\n                            }\n                            duration\n                            status\n                            note\n                            beforeImage {\n                                id\n                                url\n                            }\n                            afterImage {\n                                id\n                                url\n                            }\n                            employee {\n                                type\n                                id\n                                image {\n                                    id\n                                    url\n                                }\n                                createdAt\n                                updatedAt\n                                email\n                                firstName\n                                lastName\n                                fullName\n                                gender\n                                phoneNumber {\n                                    raw\n                                    href\n                                }\n                                # appointments\n                            }\n                            # customer\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Viewer (aka current user)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    viewer {\n        id\n        createdAt\n        updatedAt\n        lastName\n        firstName\n        fullName\n        email\n        phoneNumber {\n            raw\n            href\n        }\n        gender\n        image {\n            id\n            url\n        }\n        type\n        street\n        zipCode\n        city\n        birthday\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Branches for current company",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    branches(\r\n        input:{}\r\n    ) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            welcomeMessage\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            address\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            logo {\r\n                id\r\n                url\r\n            }\r\n            appTheme\r\n            sharingRedirectUrl\r\n            websiteUrl\r\n            navigationLink\r\n            imprint\r\n            # company\r\n            openingHours {\r\n                formatted {\r\n                    key\r\n                    closed\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    value\r\n                }\r\n                raw {\r\n                    day\r\n                    closed\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    forenoon {\r\n                        start\r\n                        end\r\n                    }\r\n                    afternoon {\r\n                        start\r\n                        end\r\n                    }\r\n                }\r\n            }\r\n            news {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                title\r\n                image {\r\n                    id\r\n                    url\r\n                }\r\n            }\r\n            reviewAggregations {\r\n                totalCount\r\n                averageRating\r\n                countPerStar\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    status\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                    appointment {\r\n                        id\r\n                        createdAt\r\n                        updatedAt\r\n                        desc\r\n                        start\r\n                        end\r\n                        price {\r\n                            value\r\n                            displayValue\r\n                        }\r\n                        duration\r\n                        status\r\n                        note\r\n                        beforeImage {\r\n                            id\r\n                            url\r\n                        }\r\n                        afterImage {\r\n                            id\r\n                            url\r\n                        }\r\n                        employee {\r\n                            type\r\n                            id\r\n                            image {\r\n                                id\r\n                                url\r\n                            }\r\n                            createdAt\r\n                            updatedAt\r\n                            email\r\n                            firstName\r\n                            lastName\r\n                            fullName\r\n                            gender\r\n                            phoneNumber {\r\n                                raw\r\n                                href\r\n                            }\r\n                            # appointments\r\n                        }\r\n                        # customer\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customers for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCustomerId', jsonData.data.customers.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    customers(input:{}) {\r\n        nodes {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            note\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                    products {\r\n                        item {\r\n                            id\r\n                            createdAt\r\n                            updatedAt\r\n                            name\r\n                            desc\r\n                            price {\r\n                                value\r\n                                displayValue\r\n                            }\r\n                            capacity\r\n                            category\r\n                            image {\r\n                                id\r\n                                url\r\n                            }\r\n                            attributes {\r\n                                key\r\n                                name\r\n                                value\r\n                            }\r\n                        }\r\n                        count\r\n                    }\r\n                    services {\r\n                        id\r\n                        createdAt\r\n                        updatedAt\r\n                        name\r\n                        desc\r\n                        price {\r\n                            value\r\n                            displayValue\r\n                        }\r\n                        duration\r\n                        genderTarget\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        attributes {\r\n                            key\r\n                            name\r\n                            value\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                    ... on ProductReview {\r\n                        product {\r\n                            id\r\n                            name\r\n                        }\r\n                    }\r\n                    ... on ServiceReview {\r\n                        service {\r\n                            id\r\n                            name\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customers for branch",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($branchId: ID!) {\r\n    customers(input:{\r\n        branch: $branchId\r\n    }) {\r\n        nodes {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            note\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                    ... on ProductReview {\r\n                        product {\r\n                            id\r\n                            name\r\n                        }\r\n                    }\r\n                    ... on ServiceReview {\r\n                        service {\r\n                            id\r\n                            name\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": "{\r\n    \"branchId\": \"{{currentBranchId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employees for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentEmployeeId', jsonData.data.employees.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    employees(input:{}) {\r\n        nodes {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # employee\r\n                }\r\n            }\r\n            workingHours {\r\n                formatted {\r\n                    key\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    value\r\n                }\r\n                raw {\r\n                    day\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    forenoon {\r\n                        start\r\n                        end\r\n                    }\r\n                    afternoon {\r\n                        start\r\n                        end\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    products(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            capacity\r\n            category\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            attributes {\r\n                key\r\n                name\r\n                value\r\n            }\r\n            viewerCanReview\r\n            viewerReview {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                stars\r\n                title\r\n                text\r\n                type\r\n                status\r\n                customer {\r\n                    type\r\n                    id\r\n                    image {\r\n                        id\r\n                        url\r\n                    }\r\n                    createdAt\r\n                    updatedAt\r\n                    email\r\n                    firstName\r\n                    lastName\r\n                    fullName\r\n                    gender\r\n                    note\r\n                    phoneNumber {\r\n                        raw\r\n                        href\r\n                    }\r\n                    appointments {\r\n                        nodes {\r\n                            id\r\n                            createdAt\r\n                            updatedAt\r\n                            desc\r\n                            start\r\n                            end\r\n                            price {\r\n                                value\r\n                                displayValue\r\n                            }\r\n                            duration\r\n                            status\r\n                            note\r\n                            beforeImage {\r\n                                id\r\n                                url\r\n                            }\r\n                            afterImage {\r\n                                id\r\n                                url\r\n                            }\r\n                            employee {\r\n                                type\r\n                                id\r\n                                image {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                createdAt\r\n                                updatedAt\r\n                                email\r\n                                firstName\r\n                                lastName\r\n                                fullName\r\n                                gender\r\n                                phoneNumber {\r\n                                    raw\r\n                                    href\r\n                                }\r\n                                # appointments\r\n                            }\r\n                            # customer\r\n                        }\r\n                    }\r\n                    # reviews\r\n                }\r\n            }\r\n            reviewAggregations {\r\n                totalCount\r\n                averageRating\r\n                countPerStar\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    status\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Services for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentServiceId', jsonData.data.services.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    services(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            duration\r\n            genderTarget\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            attributes {\r\n                key\r\n                name\r\n                value\r\n            }\r\n            viewerCanReview\r\n            viewerReview {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                stars\r\n                title\r\n                text\r\n                type\r\n                status\r\n                customer {\r\n                    type\r\n                    id\r\n                    image {\r\n                        id\r\n                        url\r\n                    }\r\n                    createdAt\r\n                    updatedAt\r\n                    email\r\n                    firstName\r\n                    lastName\r\n                    fullName\r\n                    gender\r\n                    note\r\n                    phoneNumber {\r\n                        raw\r\n                        href\r\n                    }\r\n                    appointments {\r\n                        nodes {\r\n                            id\r\n                            createdAt\r\n                            updatedAt\r\n                            desc\r\n                            start\r\n                            end\r\n                            price {\r\n                                value\r\n                                displayValue\r\n                            }\r\n                            duration\r\n                            status\r\n                            note\r\n                            beforeImage {\r\n                                id\r\n                                url\r\n                            }\r\n                            afterImage {\r\n                                id\r\n                                url\r\n                            }\r\n                            employee {\r\n                                type\r\n                                id\r\n                                image {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                createdAt\r\n                                updatedAt\r\n                                email\r\n                                firstName\r\n                                lastName\r\n                                fullName\r\n                                gender\r\n                                phoneNumber {\r\n                                    raw\r\n                                    href\r\n                                }\r\n                                # appointments\r\n                            }\r\n                            # customer\r\n                        }\r\n                    }\r\n                    # reviews\r\n                }\r\n            }\r\n            reviewAggregations {\r\n                totalCount\r\n                averageRating\r\n                countPerStar\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    status\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Staff members for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentStaffMemberId', jsonData.data.staffMembers.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    staffMembers(input:{}) {\r\n        nodes {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # employee\r\n                }\r\n            }\r\n            workingHours {\r\n                formatted {\r\n                    key\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    value\r\n                }\r\n                raw {\r\n                    day\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    forenoon {\r\n                        start\r\n                        end\r\n                    }\r\n                    afternoon {\r\n                        start\r\n                        end\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Staff member by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($staffMemberId: ID!) {\r\n    staffMember(id: $staffMemberId) {\r\n        type\r\n        id\r\n        image {\r\n            id\r\n            url\r\n        }\r\n        createdAt\r\n        updatedAt\r\n        email\r\n        firstName\r\n        lastName\r\n        fullName\r\n        gender\r\n        phoneNumber {\r\n            raw\r\n            href\r\n        }\r\n        street\r\n        zipCode\r\n        city\r\n        birthday\r\n        appointments {\r\n            nodes {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                desc\r\n                start\r\n                end\r\n                price {\r\n                    value\r\n                    displayValue\r\n                }\r\n                duration\r\n                status\r\n                note\r\n                beforeImage {\r\n                    id\r\n                    url\r\n                }\r\n                afterImage {\r\n                    id\r\n                    url\r\n                }\r\n                customer {\r\n                    type\r\n                    id\r\n                    image {\r\n                        id\r\n                        url\r\n                    }\r\n                    createdAt\r\n                    updatedAt\r\n                    email\r\n                    firstName\r\n                    lastName\r\n                    fullName\r\n                    gender\r\n                    phoneNumber {\r\n                        raw\r\n                        href\r\n                    }\r\n                    # appointments\r\n                }\r\n                # employee\r\n            }\r\n        }\r\n        workingHours {\r\n            formatted {\r\n                key\r\n                notWorking\r\n                break\r\n                shortDay\r\n                fullDay\r\n                value\r\n            }\r\n            raw {\r\n                day\r\n                notWorking\r\n                break\r\n                shortDay\r\n                fullDay\r\n                forenoon {\r\n                    start\r\n                    end\r\n                }\r\n                afternoon {\r\n                    start\r\n                    end\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": "{\r\n    \"staffMemberId\": \"{{currentStaffMemberId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Staff members for company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($companyId: ID!) {\r\n    staffMembers(input:{\r\n        company: $companyId\r\n    }) {\r\n        nodes {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # employee\r\n                }\r\n            }\r\n            workingHours {\r\n                formatted {\r\n                    key\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    value\r\n                }\r\n                raw {\r\n                    day\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    forenoon {\r\n                        start\r\n                        end\r\n                    }\r\n                    afternoon {\r\n                        start\r\n                        end\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": "{\r\n    \"companyId\": \"{{currentCompanyId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Staff members for branch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($branchId: ID!) {\r\n    staffMembers(input:{\r\n        branch: $branchId\r\n    }) {\r\n        nodes {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # employee\r\n                }\r\n            }\r\n            workingHours {\r\n                formatted {\r\n                    key\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    value\r\n                }\r\n                raw {\r\n                    day\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    forenoon {\r\n                        start\r\n                        end\r\n                    }\r\n                    afternoon {\r\n                        start\r\n                        end\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": "{\r\n    \"branchId\": \"{{currentBranchId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Public information for staff members for current company",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    publicStaffMembers(input:{}) {\r\n        nodes {\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            firstName\r\n            lastName\r\n            fullName\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Appointment slots",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($branchId: ID!, $serviceId: ID!) {\r\n    appointmentTimeslots(input: {\r\n        branch: $branchId\r\n        services: [{\r\n            id: $serviceId\r\n        }, {\r\n            id: $serviceId\r\n        }]\r\n        start: \"2021-12-31T00:00:00Z\"\r\n    }) {\r\n        duration\r\n        price {\r\n            value\r\n            displayValue\r\n        }\r\n        ranges {\r\n            start\r\n            end\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"branchId\": \"{{currentBranchId}}\",\n\t\"serviceId\": \"{{currentServiceId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Appointment slots for employee",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($branchId: ID!, $serviceId: ID!, $employeeId: ID) {\r\n    appointmentTimeslots(input: {\r\n        branch: $branchId\r\n        services: [{\r\n            id: $serviceId\r\n        }, {\r\n            id: $serviceId\r\n        }]\r\n        start: \"2021-12-31T00:00:00Z\"\r\n        employee: $employeeId\r\n    }) {\r\n        duration\r\n        price {\r\n            value\r\n            displayValue\r\n        }\r\n        ranges {\r\n            start\r\n            end\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"branchId\": \"{{currentBranchId}}\",\n\t\"serviceId\": \"{{currentServiceId}}\",\n\t\"employeeId\": \"{{currentEmployeeId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reviews for current user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    reviews(input: {}) {\n        nodes {\n            id\n            createdAt\n            updatedAt\n            stars\n            title\n            text\n            type\n            status\n            customer {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                note\n                street\n                zipCode\n                city\n                birthday\n                appointments {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        desc\n                        start\n                        end\n                        price {\n                            value\n                            displayValue\n                        }\n                        duration\n                        status\n                        note\n                        beforeImage {\n                            id\n                            url\n                        }\n                        afterImage {\n                            id\n                            url\n                        }\n                        employee {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            # appointments\n                        }\n                        # customer\n                    }\n                }\n                # reviews\n            }\n            ... on ProductReview {\n                product {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    desc\n                    price {\n                        value\n                        displayValue\n                    }\n                    capacity\n                    category\n                    image {\n                        id\n                        url\n                    }\n                    # reviews\n                }\n            }\n            ... on ServiceReview {\n                service {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    desc\n                    price {\n                        value\n                        displayValue\n                \t}\n                    duration\n                    genderTarget\n                    image {\n                        id\n                        url\n                    }\n                    # reviews\n                }\n            }\n            ... on AppointmentReview {\n                appointment {\n                    id\n                    createdAt\n                    updatedAt\n                    desc\n                    start\n                    end\n                    price {\n                        value\n                        displayValue\n                    }\n                    duration\n                    status\n                    note\n                    beforeImage {\n                        id\n                        url\n                    }\n                    afterImage {\n                        id\n                        url\n                    }\n                    employee {\n                        type\n                        id\n                        image {\n                            id\n                            url\n                        }\n                        createdAt\n                        updatedAt\n                        email\n                        firstName\n                        lastName\n                        fullName\n                        gender\n                        phoneNumber {\n                            raw\n                            href\n                        }\n                        # appointments\n                    }\n                    # customer\n                    # review\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unapproved reviews",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    reviews(input: {\n        status: [PENDING]\n    }) {\n        nodes {\n            id\n            createdAt\n            updatedAt\n            stars\n            title\n            text\n            type\n            status\n            customer {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                note\n                street\n                zipCode\n                city\n                birthday\n                appointments {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        desc\n                        start\n                        end\n                        price {\n                            value\n                            displayValue\n                        }\n                        duration\n                        status\n                        note\n                        beforeImage {\n                            id\n                            url\n                        }\n                        afterImage {\n                            id\n                            url\n                        }\n                        employee {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            # appointments\n                        }\n                        # customer\n                    }\n                }\n                # reviews\n            }\n            ... on ProductReview {\n                product {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    desc\n                    price {\n                        value\n                        displayValue\n                    }\n                    capacity\n                    category\n                    image {\n                        id\n                        url\n                    }\n                    # reviews\n                }\n            }\n            ... on ServiceReview {\n                service {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    desc\n                    price {\n                        value\n                        displayValue\n                \t}\n                    duration\n                    genderTarget\n                    image {\n                        id\n                        url\n                    }\n                    # reviews\n                }\n            }\n            ... on AppointmentReview {\n                appointment {\n                    id\n                    createdAt\n                    updatedAt\n                    desc\n                    start\n                    end\n                    price {\n                        value\n                        displayValue\n                    }\n                    duration\n                    status\n                    note\n                    beforeImage {\n                        id\n                        url\n                    }\n                    afterImage {\n                        id\n                        url\n                    }\n                    employee {\n                        type\n                        id\n                        image {\n                            id\n                            url\n                        }\n                        createdAt\n                        updatedAt\n                        email\n                        firstName\n                        lastName\n                        fullName\n                        gender\n                        phoneNumber {\n                            raw\n                            href\n                        }\n                        # appointments\n                    }\n                    # customer\n                    # review\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reviews for customer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($customerId: ID!) {\n    reviews(input: {\n        customer: $customerId\n    }) {\n        nodes {\n            id\n            createdAt\n            updatedAt\n            stars\n            title\n            text\n            type\n            status\n            customer {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                note\n                street\n                zipCode\n                city\n                birthday\n                appointments {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        desc\n                        start\n                        end\n                        price {\n                            value\n                            displayValue\n                        }\n                        duration\n                        status\n                        note\n                        beforeImage {\n                            id\n                            url\n                        }\n                        afterImage {\n                            id\n                            url\n                        }\n                        employee {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            # appointments\n                        }\n                        # customer\n                    }\n                }\n                # reviews\n            }\n            ... on ProductReview {\n                product {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    desc\n                    price {\n                        value\n                        displayValue\n                    }\n                    capacity\n                    category\n                    image {\n                        id\n                        url\n                    }\n                    # reviews\n                }\n            }\n            ... on ServiceReview {\n                service {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    desc\n                    price {\n                        value\n                        displayValue\n                \t}\n                    duration\n                    genderTarget\n                    image {\n                        id\n                        url\n                    }\n                    # reviews\n                }\n            }\n            ... on AppointmentReview {\n                appointment {\n                    id\n                    createdAt\n                    updatedAt\n                    desc\n                    start\n                    end\n                    price {\n                        value\n                        displayValue\n                    }\n                    duration\n                    status\n                    note\n                    beforeImage {\n                        id\n                        url\n                    }\n                    afterImage {\n                        id\n                        url\n                    }\n                    employee {\n                        type\n                        id\n                        image {\n                            id\n                            url\n                        }\n                        createdAt\n                        updatedAt\n                        email\n                        firstName\n                        lastName\n                        fullName\n                        gender\n                        phoneNumber {\n                            raw\n                            href\n                        }\n                        # appointments\n                    }\n                    # customer\n                    # review\n                }\n            }\n        }\n    }\n}",
								"variables": "{\r\n    \"customerId\": \"{{currentCustomerId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"jane@employees.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reviews for current user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    reviews(input: {}) {\n        nodes {\n            id\n            createdAt\n            updatedAt\n            stars\n            title\n            text\n            type\n            status\n            customer {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                note\n                street\n                zipCode\n                city\n                birthday\n                appointments {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        desc\n                        start\n                        end\n                        price {\n                            value\n                            displayValue\n                        }\n                        duration\n                        status\n                        note\n                        beforeImage {\n                            id\n                            url\n                        }\n                        afterImage {\n                            id\n                            url\n                        }\n                        employee {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            # appointments\n                        }\n                        # customer\n                    }\n                }\n                # reviews\n            }\n            ... on ProductReview {\n                product {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    desc\n                    price {\n                        value\n                        displayValue\n                    }\n                    capacity\n                    category\n                    image {\n                        id\n                        url\n                    }\n                    # reviews\n                }\n            }\n            ... on ServiceReview {\n                service {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    desc\n                    price {\n                        value\n                        displayValue\n                \t}\n                    duration\n                    genderTarget\n                    image {\n                        id\n                        url\n                    }\n                    # reviews\n                }\n            }\n            ... on AppointmentReview {\n                appointment {\n                    id\n                    createdAt\n                    updatedAt\n                    desc\n                    start\n                    end\n                    price {\n                        value\n                        displayValue\n                    }\n                    duration\n                    status\n                    note\n                    beforeImage {\n                        id\n                        url\n                    }\n                    afterImage {\n                        id\n                        url\n                    }\n                    employee {\n                        type\n                        id\n                        image {\n                            id\n                            url\n                        }\n                        createdAt\n                        updatedAt\n                        email\n                        firstName\n                        lastName\n                        fullName\n                        gender\n                        phoneNumber {\n                            raw\n                            href\n                        }\n                        # appointments\n                    }\n                    # customer\n                    # review\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"john@customers.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reviews for current user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    reviews(input: {}) {\n        nodes {\n            id\n            createdAt\n            updatedAt\n            stars\n            title\n            text\n            type\n            status\n            customer {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                note\n                street\n                zipCode\n                city\n                birthday\n                appointments {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        desc\n                        start\n                        end\n                        price {\n                            value\n                            displayValue\n                        }\n                        duration\n                        status\n                        note\n                        beforeImage {\n                            id\n                            url\n                        }\n                        afterImage {\n                            id\n                            url\n                        }\n                        employee {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            # appointments\n                        }\n                        # customer\n                    }\n                }\n                # reviews\n            }\n            ... on ProductReview {\n                product {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    desc\n                    price {\n                        value\n                        displayValue\n                    }\n                    capacity\n                    category\n                    image {\n                        id\n                        url\n                    }\n                    # reviews\n                }\n            }\n            ... on ServiceReview {\n                service {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    desc\n                    price {\n                        value\n                        displayValue\n                \t}\n                    duration\n                    genderTarget\n                    image {\n                        id\n                        url\n                    }\n                    # reviews\n                }\n            }\n            ... on AppointmentReview {\n                appointment {\n                    id\n                    createdAt\n                    updatedAt\n                    desc\n                    start\n                    end\n                    price {\n                        value\n                        displayValue\n                    }\n                    duration\n                    status\n                    note\n                    beforeImage {\n                        id\n                        url\n                    }\n                    afterImage {\n                        id\n                        url\n                    }\n                    employee {\n                        type\n                        id\n                        image {\n                            id\n                            url\n                        }\n                        createdAt\n                        updatedAt\n                        email\n                        firstName\n                        lastName\n                        fullName\n                        gender\n                        phoneNumber {\n                            raw\n                            href\n                        }\n                        # appointments\n                    }\n                    # customer\n                    # review\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order history for current user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    orderHistory {\n        products {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                desc\n                price {\n                    value\n                    displayValue\n            \t}\n                capacity\n                category\n                image {\n                    id\n                    url\n                }\n                viewerCanReview\n                reviews {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        stars\n                        title\n                        text\n                        type\n                        customer {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            note\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            street\n                            zipCode\n                            city\n                            birthday\n                            appointments {\n                                nodes {\n                                    id\n                                    createdAt\n                                    updatedAt\n                                    desc\n                                    start\n                                    end\n                                    price {\n                                        value\n                                        displayValue\n                                    }\n                                    duration\n                                    status\n                                    note\n                                    beforeImage {\n                                        id\n                                        url\n                                    }\n                                    afterImage {\n                                        id\n                                        url\n                                    }\n                                    employee {\n                                        type\n                                        id\n                                        image {\n                                            id\n                                            url\n                                        }\n                                        createdAt\n                                        updatedAt\n                                        email\n                                        firstName\n                                        lastName\n                                        fullName\n                                        gender\n                                        phoneNumber {\n                                            raw\n                                            href\n                                        }\n                                        # appointments\n                                    }\n                                    # customer\n                                }\n                            }\n                            # reviews\n                        }\n                    }\n                }\n            }\n        }\n        services {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                desc\n                price {\n                    value\n                    displayValue\n            \t}\n                duration\n                genderTarget\n                image {\n                    id\n                    url\n                }\n                viewerCanReview\n                reviews {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        stars\n                        title\n                        text\n                        type\n                        customer {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            note\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            street\n                            zipCode\n                            city\n                            birthday\n                            appointments {\n                                nodes {\n                                    id\n                                    createdAt\n                                    updatedAt\n                                    desc\n                                    start\n                                    end\n                                    price {\n                                        value\n                                        displayValue\n                                    }\n                                    duration\n                                    status\n                                    note\n                                    beforeImage {\n                                        id\n                                        url\n                                    }\n                                    afterImage {\n                                        id\n                                        url\n                                    }\n                                    employee {\n                                        type\n                                        id\n                                        image {\n                                            id\n                                            url\n                                        }\n                                        createdAt\n                                        updatedAt\n                                        email\n                                        firstName\n                                        lastName\n                                        fullName\n                                        gender\n                                        phoneNumber {\n                                            raw\n                                            href\n                                        }\n                                        # appointments\n                                    }\n                                    # customer\n                                }\n                            }\n                            # reviews\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Favorites for current user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    favorites {\n        products {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                desc\n                price {\n                    value\n                    displayValue\n            \t}\n                capacity\n                category\n                image {\n                    id\n                    url\n                }\n                viewerCanReview\n                reviews {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        stars\n                        title\n                        text\n                        type\n                        customer {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            note\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            street\n                            zipCode\n                            city\n                            birthday\n                            appointments {\n                                nodes {\n                                    id\n                                    createdAt\n                                    updatedAt\n                                    desc\n                                    start\n                                    end\n                                    price {\n                                        value\n                                        displayValue\n                                    }\n                                    duration\n                                    status\n                                    note\n                                    beforeImage {\n                                        id\n                                        url\n                                    }\n                                    afterImage {\n                                        id\n                                        url\n                                    }\n                                    employee {\n                                        type\n                                        id\n                                        image {\n                                            id\n                                            url\n                                        }\n                                        createdAt\n                                        updatedAt\n                                        email\n                                        firstName\n                                        lastName\n                                        fullName\n                                        gender\n                                        phoneNumber {\n                                            raw\n                                            href\n                                        }\n                                        # appointments\n                                    }\n                                    # customer\n                                }\n                            }\n                            # reviews\n                        }\n                    }\n                }\n            }\n        }\n        services {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                desc\n                price {\n                    value\n                    displayValue\n            \t}\n                duration\n                genderTarget\n                image {\n                    id\n                    url\n                }\n                viewerCanReview\n                reviews {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        stars\n                        title\n                        text\n                        type\n                        customer {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            note\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            street\n                            zipCode\n                            city\n                            birthday\n                            appointments {\n                                nodes {\n                                    id\n                                    createdAt\n                                    updatedAt\n                                    desc\n                                    start\n                                    end\n                                    price {\n                                        value\n                                        displayValue\n                                    }\n                                    duration\n                                    status\n                                    note\n                                    beforeImage {\n                                        id\n                                        url\n                                    }\n                                    afterImage {\n                                        id\n                                        url\n                                    }\n                                    employee {\n                                        type\n                                        id\n                                        image {\n                                            id\n                                            url\n                                        }\n                                        createdAt\n                                        updatedAt\n                                        email\n                                        firstName\n                                        lastName\n                                        fullName\n                                        gender\n                                        phoneNumber {\n                                            raw\n                                            href\n                                        }\n                                        # appointments\n                                    }\n                                    # customer\n                                }\n                            }\n                            # reviews\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as administrator",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"admin@example.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "List email templates",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    emailTemplates {\r\n        templates {\r\n            id\r\n            name\r\n            title\r\n            content\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query email template",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    emailTemplate(input: {\r\n        name: \"invite\"\r\n    }) {\r\n        template {\r\n            id\r\n            name\r\n            title\r\n            content\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication life cycle",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($email:String!) {\n    register(input: {\n        email: $email\n        password: \"asdfasdf\"\n        firstName: \"Gibs\"\n        lastName: \"Nicht\"\n        birthday: \"1950-01-01\"\n        gender: MALE\n        phoneNumber: \"0123456\"\n    }) {\n        status\n    }\n}",
								"variables": "{\r\n    \"email\": \"{{registerEmail}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Activation Link",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($email:String!) {\n    requestActivationLink(input:{\n        email: $email\n    }) {\n        status\n    }\n}",
								"variables": "{\r\n    \"email\": \"{{registerEmail}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($token:String!) {\n    activateAccount(input:{\n        token: $token\n    }) {\n        status\n    }\n}",
								"variables": "{\r\n    \"token\": \"{{activationToken}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"if (jsonData.data && jsonData.data.login && jsonData.data.login.session) {\r",
									"    postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									"    postman.setEnvironmentVariable('registeredUserId', jsonData.data.login.user.id)\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($email:String!) {\n    login(input: {\n        email: $email\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": "{\r\n    \"email\": \"{{registerEmail}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"authorizationToken\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    logout {\n        session {\n            id\n            token\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as manager (so we can delete)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($userId:ID!) {\r\n    deleteCustomer(input: { id: $userId }) {\r\n        customer {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            note\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"userId\": \"{{registeredUserId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer life cycle",
			"item": [
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"if (jsonData.data && jsonData.data.createCustomer) {\r",
									"    postman.setEnvironmentVariable('createdCustomerId', jsonData.data.createCustomer.customer.id)\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($companyId: ID!) {\r\n    createCustomer(\r\n        input: {\r\n            company: $companyId\r\n            user: {\r\n                email: \"gibs2@nicht.de\"\r\n                firstName: \"Ali\"\r\n                lastName: \"Gator\"\r\n                gender: MALE\r\n                phoneNumber: \"12345\"\r\n                street: \"Straße 1\"\r\n                zipCode: \"01234\"\r\n                city: \"Musterstadt\"\r\n                birthday: \"1900-01-01\"\r\n            }\r\n            customer: {\r\n                note: \"Ganz wichtig!\"\r\n                allowReviewSharing: false\r\n            }\r\n        }\r\n    ) {\r\n        customer {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            note\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"companyId\": \"{{currentCompanyId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update customer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($customerId: ID!) {\r\n    updateCustomer(\r\n        input: {\r\n            id: $customerId\r\n            patchUser: {\r\n                email: \"gibs3@nicht.de\"\r\n                firstName: \"Kroko\"\r\n                lastName: \"Dil\"\r\n                gender: FEMALE\r\n                phoneNumber: \"98765\"\r\n                street: \"Allee 2\"\r\n                zipCode: \"67890\"\r\n                city: \"Musterdorf\"\r\n                birthday: \"1910-01-01\"\r\n            }\r\n            patchCustomer: {\r\n                note: \"Noch wichtiger!\"\r\n                allowReviewSharing: true\r\n            }\r\n        }\r\n    ) {\r\n        customer {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            note\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"customerId\": \"{{createdCustomerId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Empty customer update",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($customerId: ID!) {\r\n    updateCustomer(\r\n        input: {\r\n            id: $customerId\r\n            patchUser: {\r\n            }\r\n            patchCustomer: {\r\n            }\r\n        }\r\n    ) {\r\n        customer {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            note\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"customerId\": \"{{createdCustomerId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete customer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($customerId: ID!) {\r\n    deleteCustomer(\r\n        input: {\r\n            id: $customerId\r\n        }\r\n    ) {\r\n        customer {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            note\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"customerId\": \"{{createdCustomerId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Manager life cycle",
			"item": [
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdManagerId', jsonData.data.createManager.manager.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($companyId: ID!) {\r\n    createManager(\r\n        input: {\r\n            company: $companyId\r\n            user: {\r\n                email: \"gibs3@nicht.de\"\r\n                firstName: \"Man\"\r\n                lastName: \"Ager\"\r\n                gender: MALE\r\n                phoneNumber: \"000000000\"\r\n                street: \"Weg 2\"\r\n                zipCode: \"34567\"\r\n                city: \"Musterdorf\"\r\n                birthday: \"1900-01-01\"\r\n            }\r\n            manager: {\r\n                workingHours: {\r\n                    day: MO\r\n                    notWorking: false\r\n                    break:true\r\n                    forenoon: {\r\n                        start: \"2020-05-28T00:00:00+02:00\"\r\n                        end: \"2020-05-28T11:00:00+02:00\"\r\n                    }\r\n                    afternoon: {\r\n                        start: \"2020-05-28T13:00:00+02:00\"\r\n                        end: \"2020-05-28T23:59:59+02:00\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ) {\r\n        manager {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            company {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                logo {\r\n                    id\r\n                    url\r\n                }\r\n                appTheme\r\n                sharingRedirectUrl\r\n                branches {\r\n                    nodes {\r\n                        id\r\n                        createdAt\r\n                        updatedAt\r\n                        name\r\n                        welcomeMessage\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        address\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        logo {\r\n                            id\r\n                            url\r\n                        }\r\n                        appTheme\r\n                        sharingRedirectUrl\r\n                        # company\r\n                        openingHours {\r\n                            formatted {\r\n                                key\r\n                                closed\r\n                                break\r\n                                shortDay\r\n                                fullDay\r\n                                value\r\n                            }\r\n                            raw {\r\n                                day\r\n                                closed\r\n                                break\r\n                                shortDay\r\n                                fullDay\r\n                                forenoon {\r\n                                    start\r\n                                    end\r\n                                }\r\n                                afternoon {\r\n                                    start\r\n                                    end\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            workingHours {\r\n                formatted {\r\n                    key\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    value\r\n                }\r\n                raw {\r\n                    day\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    forenoon {\r\n                        start\r\n                        end\r\n                    }\r\n                    afternoon {\r\n                        start\r\n                        end\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"companyId\": \"{{currentCompanyId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update manager",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($managerId: ID!) {\r\n    updateManager(\r\n        input: {\r\n            id: $managerId\r\n            patch: {\r\n                email: \"gibs4@nicht.de\"\r\n                firstName: \"Aufseh\"\r\n                lastName: \"Herrin\"\r\n                gender: FEMALE\r\n                phoneNumber: \"0123456789\"\r\n                street: \"Am Ende 5\"\r\n                zipCode: \"56789\"\r\n                city: \"Musterhausen\"\r\n                birthday: \"1910-01-01\"\r\n            }\r\n            patchManager: {\r\n                workingHours: {\r\n                    day: TU\r\n                    notWorking: false\r\n                    break:true\r\n                    forenoon: {\r\n                        start: \"2020-05-28T00:00:00+02:00\"\r\n                        end: \"2020-05-28T11:00:00+02:00\"\r\n                    }\r\n                    afternoon: {\r\n                        start: \"2020-05-28T13:00:00+02:00\"\r\n                        end: \"2020-05-28T23:59:59+02:00\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ) {\r\n        manager {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            company {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                logo {\r\n                    id\r\n                    url\r\n                }\r\n                appTheme\r\n                sharingRedirectUrl\r\n                branches {\r\n                    nodes {\r\n                        id\r\n                        createdAt\r\n                        updatedAt\r\n                        name\r\n                        welcomeMessage\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        address\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        logo {\r\n                            id\r\n                            url\r\n                        }\r\n                        appTheme\r\n                        sharingRedirectUrl\r\n                        # company\r\n                        openingHours {\r\n                            formatted {\r\n                                key\r\n                                closed\r\n                                break\r\n                                shortDay\r\n                                fullDay\r\n                                value\r\n                            }\r\n                            raw {\r\n                                day\r\n                                closed\r\n                                break\r\n                                shortDay\r\n                                fullDay\r\n                                forenoon {\r\n                                    start\r\n                                    end\r\n                                }\r\n                                afternoon {\r\n                                    start\r\n                                    end\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            workingHours {\r\n                formatted {\r\n                    key\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    value\r\n                }\r\n                raw {\r\n                    day\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    forenoon {\r\n                        start\r\n                        end\r\n                    }\r\n                    afternoon {\r\n                        start\r\n                        end\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"managerId\": \"{{createdManagerId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete manager",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($managerId: ID!) {\r\n    deleteManager(\r\n        input: {\r\n            id: $managerId\r\n        }\r\n    ) {\r\n        manager {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            # company\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"managerId\": \"{{createdManagerId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Employee life cycle",
			"item": [
				{
					"name": "Login as manager",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdEmployeeId', jsonData.data.createEmployee.employee.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!) {\r\n    createEmployee(\r\n        input: {\r\n            branch: $branchId\r\n            data: {\r\n                email: \"gibs4@nicht.de\"\r\n                firstName: \"Ar\"\r\n                lastName: \"Beiter\"\r\n                gender: MALE\r\n                phoneNumber: \"12345\"\r\n                street: \"Straße 1\"\r\n                zipCode: \"01234\"\r\n                city: \"Musterstadt\"\r\n                birthday: \"1900-01-01\"\r\n            }\r\n            employee: {\r\n                workingHours: {\r\n                    day: MO\r\n                    notWorking: false\r\n                    break:true\r\n                    forenoon: {\r\n                        start: \"2020-05-28T00:00:00+02:00\"\r\n                        end: \"2020-05-28T11:00:00+02:00\"\r\n                    }\r\n                    afternoon: {\r\n                        start: \"2020-05-28T13:00:00+02:00\"\r\n                        end: \"2020-05-28T23:59:59+02:00\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ) {\r\n        employee {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            workingHours {\r\n                formatted {\r\n                    key\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    value\r\n                }\r\n                raw {\r\n                    day\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    forenoon {\r\n                        start\r\n                        end\r\n                    }\r\n                    afternoon {\r\n                        start\r\n                        end\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"branchId\": \"{{currentBranchId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update employee",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($employeeId: ID!) {\r\n    updateEmployee(\r\n        input: {\r\n            id: $employeeId\r\n            patch: {\r\n                email: \"gibs5@nicht.de\"\r\n                firstName: \"An\"\r\n                lastName: \"Gestellter\"\r\n                gender: FEMALE\r\n                phoneNumber: \"98765\"\r\n                street: \"Allee 2\"\r\n                zipCode: \"67890\"\r\n                city: \"Musterdorf\"\r\n                birthday: \"1910-01-01\"\r\n            }\r\n            patchEmployee: {\r\n                workingHours: {\r\n                    day: TU\r\n                    notWorking: false\r\n                    break:true\r\n                    forenoon: {\r\n                        start: \"2020-05-28T00:00:00+02:00\"\r\n                        end: \"2020-05-28T11:00:00+02:00\"\r\n                    }\r\n                    afternoon: {\r\n                        start: \"2020-05-28T13:00:00+02:00\"\r\n                        end: \"2020-05-28T23:59:59+02:00\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ) {\r\n        employee {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            workingHours {\r\n                formatted {\r\n                    key\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    value\r\n                }\r\n                raw {\r\n                    day\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    forenoon {\r\n                        start\r\n                        end\r\n                    }\r\n                    afternoon {\r\n                        start\r\n                        end\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"employeeId\": \"{{createdEmployeeId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update workingHours",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($employeeId: ID!) {\r\n    updateEmployee(\r\n        input: {\r\n            id: $employeeId\r\n            patch: {\r\n            }\r\n            patchEmployee: {\r\n                workingHours: {\r\n                    day: TH\r\n                    notWorking: false\r\n                    break: false\r\n                    forenoon: {\r\n                        start: \"2020-05-28T08:00:00+02:00\"\r\n                        end: \"2020-05-28T11:00:00+02:00\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ) {\r\n        employee {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            workingHours {\r\n                formatted {\r\n                    key\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    value\r\n                }\r\n                raw {\r\n                    day\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    forenoon {\r\n                        start\r\n                        end\r\n                    }\r\n                    afternoon {\r\n                        start\r\n                        end\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"employeeId\": \"{{createdEmployeeId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete employee",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($employeeId: ID!) {\r\n    deleteEmployee(\r\n        input: {\r\n            id: $employeeId\r\n        }\r\n    ) {\r\n        employee {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"employeeId\": \"{{createdEmployeeId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Administrator life cycle",
			"item": [
				{
					"name": "Login as administrator",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"admin@example.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create administrator",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdAdministratorId', jsonData.data.createAdministrator.administrator.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\r\n    createAdministrator(\r\n        input: {\r\n            user: {\r\n                email: \"gibs4@nicht.de\"\r\n                firstName: \"Ar\"\r\n                lastName: \"Beiter\"\r\n                gender: MALE\r\n                phoneNumber: \"12345\"\r\n                street: \"Straße 1\"\r\n                zipCode: \"01234\"\r\n                city: \"Musterstadt\"\r\n                birthday: \"1900-01-01\"\r\n            }\r\n        }\r\n    ) {\r\n        administrator {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n        }\r\n    }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update administrator",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($administratorId: ID!) {\r\n    updateAdministrator(\r\n        input: {\r\n            id: $administratorId\r\n            patch: {\r\n                email: \"gibs5@nicht.de\"\r\n                firstName: \"An\"\r\n                lastName: \"Gestellter\"\r\n                gender: FEMALE\r\n                phoneNumber: \"98765\"\r\n                street: \"Allee 2\"\r\n                zipCode: \"67890\"\r\n                city: \"Musterdorf\"\r\n                birthday: \"1910-01-01\"\r\n            }\r\n        }\r\n    ) {\r\n        administrator {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"administratorId\": \"{{createdAdministratorId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete administrator",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($administratorId: ID!) {\r\n    deleteAdministrator(\r\n        input: {\r\n            id: $administratorId\r\n        }\r\n    ) {\r\n        administrator {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"administratorId\": \"{{createdAdministratorId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Product life cycle",
			"item": [
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdProductId', jsonData.data.createProduct.product.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\":\"mutation($branchId: ID!, $imageFile: Upload) { createProduct(input: { branch: $branchId, data: { name: \\\"Produkt\\\", desc: \\\"Kann Dinge\\\", price: 1.21, capacity: \\\"Viel\\\", category: \\\"Produkte\\\", image: $imageFile, attributes:[{ key: \\\"category\\\", name: \\\"Kategorie\\\", value: \\\"Sonderangebote\\\"}, { key: \\\"origin\\\", name: \\\"Herkunft\\\", value: \\\"Deutschland\\\"}] }}) { product { id, createdAt, updatedAt, name, desc, price { value, displayValue }, capacity, category, image { id, url } attributes { key name value }             reviewAggregations { totalCount averageRating countPerStar } reviews { nodes { id createdAt updatedAt stars title text type customer { type id image { id url } createdAt updatedAt email firstName lastName fullName gender note phoneNumber { raw href } street city zipCode birthday appointments { nodes { id createdAt updatedAt desc start end price { value displayValue } duration status note beforeImage { id url } afterImage { id url } employee { type id image { id url } createdAt updatedAt email firstName lastName fullName gender phoneNumber { raw href } } } } } } } }}}\", \"variables\":{\"branchId\":\"{{currentBranchId}}\", \"imageFile\":null}}",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img1.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\":\"mutation($productId: ID!, $imageFile: Upload) { updateProduct(input: { id: $productId, patch: { name: \\\"Produktchen\\\", desc: \\\"Kann mehr Dinge\\\", price: 42, capacity: \\\"Viel\\\", category: \\\"Produkte\\\", image: $imageFile, attributes:[{ key: \\\"category\\\", value: \\\"Sonstiges\\\"}, { key: \\\"vendor\\\", name: \\\"Anbieter\\\", value: \\\"Acme Corp.\\\"}], removeAttributes:[\\\"origin\\\"]}}) { product { id, createdAt, updatedAt, name, desc, price { value, displayValue }, capacity, category, image { id, url } attributes {key name value} reviewAggregations { totalCount averageRating countPerStar } reviews { nodes { id createdAt updatedAt stars title text type customer { type id image { id url } createdAt updatedAt email firstName lastName fullName gender note phoneNumber { raw href } street city zipCode birthday appointments { nodes { id createdAt updatedAt desc start end price { value displayValue } duration status note beforeImage { id url } afterImage { id url } employee { type id image { id url } createdAt updatedAt email firstName lastName fullName gender phoneNumber { raw href } } } } } } } }}}\", \"variables\":{\"productId\":\"{{createdProductId}}\", \"imageFile\":null}}",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img2.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($productId: ID!) {\n    deleteProduct(input: { id: $productId }) {\n        product {\n            id\n            createdAt\n            updatedAt\n            name\n            desc\n            price {\n                value\n                displayValue\n            }\n            capacity\n            category\n            image {\n                id\n                url\n            }\n            # reviews\n        }\n    }\n}",
								"variables": "{\n\t\"productId\": \"{{createdProductId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Service life cycle",
			"item": [
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdServiceId', jsonData.data.createService.service.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\":\"mutation($branchId: ID!, $imageFile: Upload) { createService(input: { branch: $branchId, data: { name: \\\"Dienstleistung\\\", desc: \\\"Mitarbeiter macht Dinge\\\", price: 1.21, duration: 10, genderTarget: MALE, image: $imageFile, attributes:[{ key: \\\"attribute1\\\", name: \\\"Attribute 1\\\", value: \\\"Wert 1\\\"}, { key: \\\"attribute2\\\", name: \\\"Attribut 2\\\", value: \\\"Wert 2\\\"}]}}) { service { id, createdAt, updatedAt, name, desc, price { value, displayValue }, duration, genderTarget, image { id, url } attributes { key name value } reviewAggregations { totalCount averageRating countPerStar } reviews { nodes { id createdAt updatedAt stars title text type customer { type id image { id url } createdAt updatedAt email firstName lastName fullName gender note phoneNumber { raw href } street city zipCode birthday appointments { nodes { id createdAt updatedAt desc start end price { value displayValue } duration status note beforeImage { id url } afterImage { id url } employee { type id image { id url } createdAt updatedAt email firstName lastName fullName gender phoneNumber { raw href } } } } } } } }}}\", \"variables\":{\"branchId\":\"{{currentBranchId}}\", \"imageFile\":null}}",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img1.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\":\"mutation($serviceId: ID!, $imageFile: Upload) { updateService(input: { id: $serviceId, patch: { name: \\\"Dienstleistungchen\\\", desc: \\\"Mitarbeiter macht mehr Dinge\\\", price: 42, duration: 30, genderTarget: FEMALE, image: $imageFile, attributes:[{ key: \\\"attribute2\\\", name: \\\"Neuer Name\\\", value: \\\"Neuer Wert\\\"}, { key: \\\"attribute3\\\", name: \\\"Attribut 3\\\", value: \\\"Wert 3\\\"}], removeAttributes:[\\\"attribute1\\\"]}}) { service { id, createdAt, updatedAt, name, desc, price { value, displayValue }, duration, genderTarget, image { id, url } attributes { key name value } reviewAggregations { totalCount averageRating countPerStar } reviews { nodes { id createdAt updatedAt stars title text type customer { type id image { id url } createdAt updatedAt email firstName lastName fullName gender note phoneNumber { raw href } street city zipCode birthday appointments { nodes { id createdAt updatedAt desc start end price { value displayValue } duration status note beforeImage { id url } afterImage { id url } employee { type id image { id url } createdAt updatedAt email firstName lastName fullName gender phoneNumber { raw href } } } } } } } }}}\", \"variables\":{\"serviceId\":\"{{createdServiceId}}\", \"imageFile\":null}}",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img2.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($serviceId: ID!) {\n    deleteService(input: { id: $serviceId }) {\n        service {\n            id\n            createdAt\n            updatedAt\n            name\n            desc\n            price {\n                value\n                displayValue\n            }\n            duration\n            genderTarget\n            image {\n                id\n                url\n            }\n            # reviews\n        }\n    }\n}",
								"variables": "{\n\t\"serviceId\": \"{{createdServiceId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Profile life cycle",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    register(input: {\n        email: \"gibs@nicht.de\"\n        password: \"asdfasdf\"\n        firstName: \"Gibs\"\n        lastName: \"Nicht\"\n        birthday: \"1950-01-01\"\n        gender: MALE\n        phoneNumber: \"0123456\"\n    }) {\n        status\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"if (jsonData.data && jsonData.data.login) {\r",
									"    postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"gibs@nicht.de\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update profile data",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    updateViewer(input: {\n        patch: {\n            email: \"gibs2@nicht.de\"\n            firstName: \"Kroko\"\n            lastName: \"Dil\"\n            gender: FEMALE\n            phoneNumber: \"98765\"\n        }\n        allowReviewSharing: true\n        password: \"neuespasswort\"\n    }) {\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update profile picture",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\":\"mutation($imageFile: Upload!) { uploadViewerProfilePicture(upload: $imageFile) { user { type, id, image { id, url }, createdAt, updatedAt, email, firstName, lastName, fullName, gender, phoneNumber { raw, href } street zipCode city birthday}, image { id, url } } }\", \"variables\": { \"imageFile\": null } }",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img3.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove profile picture",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\r\n    removeViewerProfilePicture {\r\n        user {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n        }\r\n        image {\r\n            id\r\n            url\r\n        }\r\n    }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as manager (so we can delete)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($userId:ID!) {\r\n    deleteCustomer(input: { id: $userId }) {\r\n        customer {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            note\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"userId\": \"{{registeredUserId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Branch life cycle",
			"item": [
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)\r",
									"postman.setEnvironmentVariable('currentBranchName', jsonData.data.currentCompany.branches.nodes[0].name)\r",
									"postman.setEnvironmentVariable('currentBranchAddress', jsonData.data.currentCompany.branches.nodes[0].address)\r",
									"postman.setEnvironmentVariable('currentBranchPhoneNumber', jsonData.data.currentCompany.branches.nodes[0].phoneNumber.raw)\r",
									"postman.setEnvironmentVariable('currentBranchWelcomeMessage', jsonData.data.currentCompany.branches.nodes[0].welcomeMessage)\r",
									"postman.setEnvironmentVariable('currentBranchAppTheme', jsonData.data.currentCompany.branches.nodes[0].appTheme)\r",
									"postman.setEnvironmentVariable('currentBranchWebsiteUrl', jsonData.data.currentCompany.branches.nodes[0].websiteUrl)\r",
									"postman.setEnvironmentVariable('currentBranchNavigationLink', jsonData.data.currentCompany.branches.nodes[0].navigationLink)\r",
									"postman.setEnvironmentVariable('currentBranchSharingRedirectUrl', jsonData.data.currentCompany.branches.nodes[0].sharingRedirectUrl)\r",
									"postman.setEnvironmentVariable('currentBranchImprint', jsonData.data.currentCompany.branches.nodes[0].imprint.replace(/\\n/g, '\\\\n'))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursDay', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].day)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursClosed', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].closed)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursBreak', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].break)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).end)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).end)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update branch",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{ \"query\": \"mutation($branchId: ID!, $imageFile: Upload!, $logoFile: Upload!) { updateBranch(input: { id: $branchId patch: { name: \\\"Filiale\\\" phoneNumber: \\\"98765\\\" address: \\\"Irgend ne Straße 42, Irgendwo 12345\\\" welcomeMessage: \\\"Willkommen bei uns!\\\" image: $imageFile logo: $logoFile appTheme: \\\"classic\\\" smtpSendHost: \\\"{{smtpHost}}\\\" smtpSendPort: \\\"{{smtpPort}}\\\" smtpUsername: \\\"{{smtpUsername}}\\\" smtpPassword: \\\"{{smtpPassword}}\\\" fromEmail: \\\"{{fromEmail}}\\\" websiteUrl: \\\"https://bring.com\\\" navigationLink: \\\"https://maps.google.com\\\" sharingRedirectUrl:\\\"share.me\\\" imprint:\\\"Maggy Foster\\\\nHaardesign Filiale\\\\nIrgend ne Straße 42, Irgendwo 12345\\\\nTelefon: 98765\\\" } }) { branch { id createdAt updatedAt name welcomeMessage phoneNumber { raw href } address image { id url } logo { id url } appTheme company { id createdAt updatedAt name logo { id url } appTheme sharingRedirectUrl } openingHours { formatted { key closed break shortDay fullDay value } raw { day closed break shortDay fullDay forenoon { start end } afternoon { start end } } } news { id createdAt updatedAt title image { id url } } smtpSendHost smtpSendPort smtpUsername smtpPassword fromEmail websiteUrl navigationLink sharingRedirectUrl imprint } } }\", \"variables\": { \"branchId\": \"{{currentBranchId}}\", \"imageFile\": null, \"logoFile\": null } }",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"], \"1\":[\"variables.logoFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img4.jpg"
								},
								{
									"key": "1",
									"type": "file",
									"src": "fixtures/img1.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update branch image",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{ \"query\": \"mutation($branchId: ID!, $imageFile: Upload!) { updateBranch(input: { id: $branchId patch: { image: $imageFile } }) { branch { id createdAt updatedAt name welcomeMessage phoneNumber { raw href } address image { id url } logo { id url } appTheme company { id createdAt updatedAt name logo { id url } appTheme sharingRedirectUrl } openingHours { formatted { key closed break shortDay fullDay value } raw { day closed break shortDay fullDay forenoon { start end } afternoon { start end } } } news { id createdAt updatedAt title image { id url } } smtpSendHost smtpSendPort smtpUsername smtpPassword fromEmail imprint } } }\", \"variables\": { \"branchId\": \"{{currentBranchId}}\", \"imageFile\": null } }",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img4.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update branch logo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{ \"query\": \"mutation($branchId: ID!, $logoFile: Upload!) { updateBranch(input: { id: $branchId patch: { logo: $logoFile } }) { branch { id createdAt updatedAt name welcomeMessage phoneNumber { raw href } address image { id url } logo { id url } appTheme company { id createdAt updatedAt name logo { id url } appTheme sharingRedirectUrl } openingHours { formatted { key closed break shortDay fullDay value } raw { day closed break shortDay fullDay forenoon { start end } afternoon { start end } } } news { id createdAt updatedAt title image { id url } } smtpSendHost smtpSendPort smtpUsername smtpPassword fromEmail imprint imprint } } }\", \"variables\": { \"branchId\": \"{{currentBranchId}}\", \"logoFile\": null } }",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.logoFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/SVG_logo.svg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update opening hours",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!, $day: DayOfWeek!) {\n    upsertBranchOpeningHour(input: {\n        branch: $branchId\n        patch: {\n            day: $day\n            closed: false\n            break: true\n            forenoon: {\n                start: \"2020-05-28T10:00:00+02:00\"\n                end: \"2020-05-28T12:00:00+02:00\"\n            }\n            afternoon: {\n                start: \"2020-05-28T15:00:00+02:00\"\n                end: \"2020-05-28T17:00:00+02:00\"\n            }\n        }\n    }) {\n        branch {\n            id\n            createdAt\n            updatedAt\n            name\n            welcomeMessage\n            phoneNumber {\n                raw\n                href\n            }\n            address\n            image {\n                id\n                url\n            }\n            logo {\n                id\n                url\n            }\n            appTheme\n            websiteUrl\n            navigationLink\n            sharingRedirectUrl\n            imprint\n            company {\n                id\n                createdAt\n                updatedAt\n                name\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                # branches\n            }\n            openingHours {\n                formatted {\n                    key\n                    closed\n                    break\n                    shortDay\n                    fullDay\n                    value\n                }\n                raw {\n                    day\n                    closed\n                    break\n                    shortDay\n                    fullDay\n                    forenoon {\n                        start\n                        end\n                    }\n                    afternoon {\n                        start\n                        end\n                    }\n                }\n            }\n            news {\n                id\n                createdAt\n                updatedAt\n                title\n                image {\n                    id\n                    url\n                }\n            }\n        }\n    }\n}",
								"variables": "{\n\t\"branchId\": \"{{currentBranchId}}\",\n\t\"day\": \"{{currentBranchOpeningHoursDay}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore values",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\n    $branchId: ID!\n    $previousName: String!\n    $previousPhoneNumber: String!\n    $previousAddress: String!\n    $previousWelcomeMessage: String!\n    $previousAppTheme: String!\n    $previousBranchWebsiteUrl: String!\n    $previousBranchNavigationLink: String!\n    $previousBranchSharingRedirectUrl: String!\n    $previousBranchImprint: String!\n) {\n    updateBranch(input: {\n        id: $branchId\n        patch: {\n            name: $previousName\n            phoneNumber: $previousPhoneNumber\n            address: $previousAddress\n            welcomeMessage: $previousWelcomeMessage\n            appTheme: $previousAppTheme\n            smtpSendHost: \"\"\n            smtpSendPort: \"\"\n            smtpUsername: \"\"\n            smtpPassword: \"\"\n            fromEmail: \"\"\n            websiteUrl: $previousBranchWebsiteUrl\n            navigationLink: $previousBranchNavigationLink\n            sharingRedirectUrl: $previousBranchSharingRedirectUrl\n            imprint: $previousBranchImprint\n        }\n    }) {\n        branch {\n            id\n            createdAt\n            updatedAt\n            name\n            welcomeMessage\n            phoneNumber {\n                raw\n                href\n            }\n            address\n            image {\n                id\n                url\n            }\n            logo {\n                id\n                url\n            }\n            appTheme\n            websiteUrl\n            navigationLink\n            sharingRedirectUrl\n            imprint\n            company {\n                id\n                createdAt\n                updatedAt\n                name\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                # branches\n            }\n            openingHours {\n                formatted {\n                    key\n                    closed\n                    break\n                    shortDay\n                    fullDay\n                    value\n                }\n                raw {\n                    day\n                    closed\n                    break\n                    shortDay\n                    fullDay\n                    forenoon {\n                        start\n                        end\n                    }\n                    afternoon {\n                        start\n                        end\n                    }\n                }\n            }\n            news {\n                id\n                createdAt\n                updatedAt\n                title\n                image {\n                    id\n                    url\n                }\n            }\n            smtpSendHost\n            smtpSendPort\n            smtpUsername\n            smtpPassword\n            fromEmail\n            websiteUrl\n            navigationLink\n            sharingRedirectUrl\n        }\n    }\n}",
								"variables": "{\n\t\"branchId\": \"{{currentBranchId}}\",\n\t\"previousName\": \"{{currentBranchName}}\",\n\t\"previousPhoneNumber\": \"{{currentBranchPhoneNumber}}\",\n\t\"previousAddress\": \"{{currentBranchAddress}}\",\n\t\"previousWelcomeMessage\": \"{{currentBranchWelcomeMessage}}\",\n\t\"previousAppTheme\": \"{{currentBranchAppTheme}}\",\n\t\"previousBranchWebsiteUrl\": \"{{currentBranchWebsiteUrl}}\",\n\t\"previousBranchNavigationLink\": \"{{currentBranchNavigationLink}}\",\n\t\"previousBranchImprint\": \"{{currentBranchImprint}}\",\n\t\"previousBranchSharingRedirectUrl\": \"{{currentBranchSharingRedirectUrl}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore opening hours",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!, $day: DayOfWeek!, $closed: Boolean!, $break: Boolean!, $forenoon: TimerangeInput, $afternoon: TimerangeInput) {\n    upsertBranchOpeningHour(input: {\n        branch: $branchId\n        patch: {\n            day: $day\n            closed: $closed\n            break: $break\n            forenoon: $forenoon\n            afternoon: $afternoon\n        }\n    }) {\n        branch {\n            id\n            createdAt\n            updatedAt\n            name\n            welcomeMessage\n            phoneNumber {\n                raw\n                href\n            }\n            address\n            image {\n                id\n                url\n            }\n            logo {\n                id\n                url\n            }\n            appTheme\n            sharingRedirectUrl\n            company {\n                id\n                createdAt\n                updatedAt\n                name\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                # branches\n            }\n            openingHours {\n                formatted {\n                    key\n                    closed\n                    break\n                    shortDay\n                    fullDay\n                    value\n                }\n                raw {\n                    day\n                    closed\n                    break\n                    shortDay\n                    fullDay\n                    forenoon {\n                        start\n                        end\n                    }\n                    afternoon {\n                        start\n                        end\n                    }\n                }\n            }\n            news {\n                id\n                createdAt\n                updatedAt\n                title\n                image {\n                    id\n                    url\n                }\n            }\n        }\n    }\n}",
								"variables": "{\n\t\"branchId\": \"{{currentBranchId}}\",\n\t\"day\": \"{{currentBranchOpeningHoursDay}}\",\n\t\"closed\": {{currentBranchOpeningHoursClosed}},\n\t\"break\": {{currentBranchOpeningHoursBreak}},\n\t\"forenoon\": {{currentBranchOpeningHoursForenoon}},\n\t\"afternoon\": {{currentBranchOpeningHoursAfternoon}}\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create branch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdBranchId', jsonData.data.createBranch.branch.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{ \"query\": \"mutation($companyId: ID!, $imageFile: Upload!, $logoFile:Upload!) { createBranch(input: { company: $companyId data: { name: \\\"Neue Filiale\\\" phoneNumber: \\\"23456\\\" address: \\\"In der Straße 1, 23456 Einstadt\\\" welcomeMessage: \\\"Willkommen in unserer neuen Filiale!\\\" image: $imageFile logo: $logoFile appTheme: \\\"classic\\\" smtpSendHost: \\\"{{smtpHost}}\\\" smtpSendPort: \\\"{{smtpPort}}\\\" smtpUsername: \\\"{{smtpUsername}}\\\" smtpPassword: \\\"{{smtpPassword}}\\\" fromEmail: \\\"{{fromEmail}}\\\" websiteUrl: \\\"https://bing.com\\\" navigationLink: \\\"https://maps.google.com\\\" sharingRedirectUrl:\\\"share.me\\\" imprint:\\\"Maggy Foster\\\\nHaardesign Neue Filiale\\\\nIn der Straße 1, 23456 Einstadt\\\\nTelefon: 23456\\\" } }) { branch { id createdAt updatedAt name welcomeMessage phoneNumber { raw href } address image { id url } logo { id url } appTheme company { id createdAt updatedAt name logo { id url } appTheme sharingRedirectUrl } openingHours { formatted { key closed break shortDay fullDay value } raw { day closed break shortDay fullDay forenoon { start end } afternoon { start end } } } news { id createdAt updatedAt title image { id url } } smtpSendHost smtpSendPort smtpUsername smtpPassword fromEmail websiteUrl navigationLink sharingRedirectUrl imprint } } }\", \"variables\": { \"companyId\": \"{{currentCompanyId}}\", \"imageFile\": null, \"logoFile\": null } }",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"], \"1\":[\"variables.logoFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img1.jpg"
								},
								{
									"key": "1",
									"type": "file",
									"src": "fixtures/img2.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete branch",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!) {\n    deleteBranch(input: {\n        id: $branchId\n    }) {\n        branch {\n            id\n            createdAt\n            updatedAt\n            name\n            welcomeMessage\n            phoneNumber {\n                raw\n                href\n            }\n            address\n            image {\n                id\n                url\n            }\n            logo {\n                id\n                url\n            }\n            appTheme\n            websiteUrl\n            navigationLink\n            sharingRedirectUrl\n            openingHours {\n                formatted {\n                    key\n                    closed\n                    break\n                    shortDay\n                    fullDay\n                    value\n                }\n                raw {\n                    day\n                    closed\n                    break\n                    shortDay\n                    fullDay\n                    forenoon {\n                        start\n                        end\n                    }\n                    afternoon {\n                        start\n                        end\n                    }\n                }\n            }\n            news {\n                id\n                createdAt\n                updatedAt\n                title\n                image {\n                    id\n                    url\n                }\n            }\n            smtpSendHost\n            smtpSendPort\n            smtpUsername\n            smtpPassword\n            fromEmail\n        }\n    }\n}",
								"variables": "{\n\t\"branchId\": \"{{createdBranchId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "News life cycle",
			"item": [
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create news",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdNewsId', jsonData.data.createNews.news.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\":\"mutation($branchId: ID!, $imageFile: Upload) { createNews(input: { branch: $branchId, data: { title: \\\"Wichtige Neuigkeiten\\\", image: $imageFile}}) { news { id, createdAt, updatedAt, title, image { id, url } }}}\", \"variables\":{\"branchId\":\"{{currentBranchId}}\", \"imageFile\":null}}",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img1.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update news",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\":\"mutation($newsId: ID!, $imageFile: Upload) { updateNews(input: { id: $newsId, patch: { title: \\\"Ganz neue Neuigkeiten\\\", image: $imageFile}}) { news{ id, createdAt, updatedAt, title, image { id, url } }}}\", \"variables\":{\"newsId\":\"{{createdNewsId}}\", \"imageFile\":null}}",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img2.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete news",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($newsId: ID!) {\n    deleteNews(input: { id: $newsId }) {\n        news {\n            id\n            createdAt\n            updatedAt\n            title\n            image {\n                id\n                url\n            }\n            # branch\n        }\n    }\n}",
								"variables": "{\n\t\"newsId\": \"{{createdNewsId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer appointment life cycle",
			"item": [
				{
					"name": "Login as customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"john@customers.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)\r",
									"postman.setEnvironmentVariable('currentBranchName', jsonData.data.currentCompany.branches.nodes[0].name)\r",
									"postman.setEnvironmentVariable('currentBranchAddress', jsonData.data.currentCompany.branches.nodes[0].address)\r",
									"postman.setEnvironmentVariable('currentBranchPhoneNumber', jsonData.data.currentCompany.branches.nodes[0].phoneNumber.raw)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursDay', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].day)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursClosed', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].closed)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursBreak', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].break)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).end)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).end)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentProductId', jsonData.data.products.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    products(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            capacity\r\n            category\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Services for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentServiceId', jsonData.data.services.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    services(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            duration\r\n            genderTarget\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentAppointmentId', jsonData.data.customerRequestAppointment.appointment.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!, $productId: ID!, $serviceId: ID!) {\r\n    customerRequestAppointment(\r\n        input: {\r\n            branch: $branchId\r\n            data: {\r\n                start: \"2021-12-31T10:00:00+02:00\"\r\n                desc: \"Termin\"\r\n                services: [{\r\n                    id: $serviceId\r\n                }]\r\n                products: [{\r\n                    id: $productId\r\n                    count: 1\r\n                }]\r\n            }\r\n        }\r\n    ) {\r\n        appointment {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            desc\r\n            start\r\n            end\r\n            price {\r\n                value\r\n                displayValue\r\n            }\r\n            duration\r\n            status\r\n            note\r\n            beforeImage {\r\n                id\r\n                url\r\n            }\r\n            afterImage {\r\n                id\r\n                url\r\n            }\r\n            employee {\r\n                type\r\n                id\r\n                image {\r\n                    id\r\n                    url\r\n                }\r\n                createdAt\r\n                updatedAt\r\n                email\r\n                firstName\r\n                lastName\r\n                fullName\r\n                gender\r\n                phoneNumber {\r\n                    raw\r\n                    href\r\n                }\r\n                street\r\n                zipCode\r\n                city\r\n                birthday\r\n                # appointments\r\n            }\r\n            # customer\r\n            viewerCanReview\r\n            review {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                stars\r\n                title\r\n                text\r\n                type\r\n                customer {\r\n                    type\r\n                    id\r\n                    image {\r\n                        id\r\n                        url\r\n                    }\r\n                    createdAt\r\n                    updatedAt\r\n                    email\r\n                    firstName\r\n                    lastName\r\n                    fullName\r\n                    gender\r\n                    phoneNumber {\r\n                        raw\r\n                        href\r\n                    }\r\n                    note\r\n                    street\r\n                    zipCode\r\n                    city\r\n                    birthday\r\n                    appointments {\r\n                        nodes {\r\n                            id\r\n                            createdAt\r\n                            updatedAt\r\n                            desc\r\n                            start\r\n                            end\r\n                            price {\r\n                                value\r\n                                displayValue\r\n                            }\r\n                            duration\r\n                            status\r\n                            note\r\n                            beforeImage {\r\n                                id\r\n                                url\r\n                            }\r\n                            afterImage {\r\n                                id\r\n                                url\r\n                            }\r\n                            employee {\r\n                                type\r\n                                id\r\n                                image {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                createdAt\r\n                                updatedAt\r\n                                email\r\n                                firstName\r\n                                lastName\r\n                                fullName\r\n                                gender\r\n                                phoneNumber {\r\n                                    raw\r\n                                    href\r\n                                }\r\n                                street\r\n                                zipCode\r\n                                city\r\n                                birthday\r\n                                # appointments\r\n                            }\r\n                            # customer\r\n                        }\r\n                    }\r\n                    # reviews\r\n                }\r\n                # appointment\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"branchId\": \"{{currentBranchId}}\",\n\t\"serviceId\": \"{{currentServiceId}}\",\n\t\"productId\": \"{{currentProductId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"jane@employees.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($appointmentId: ID!) {\n    staffUpdateAppointment(\n        input: {\n            id: $appointmentId\n            patch: {\n                desc: \"Wichtiger Termin\"\n                note: \"Notiz zum Termin\"\n            }\n        }\n    ) {\n        appointment {\n            id\n            createdAt\n            updatedAt\n            desc\n            start\n            end\n            price {\n                value\n                displayValue\n            }\n            duration\n            status\n            note\n            beforeImage {\n                id\n                url\n            }\n            afterImage {\n                id\n                url\n            }\n            customer {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                note\n                street\n                zipCode\n                city\n                birthday\n                # appointments\n            }\n            # employee\n            viewerCanReview\n            review {\n                id\n                createdAt\n                updatedAt\n                stars\n                title\n                text\n                type\n                customer {\n                    type\n                    id\n                    image {\n                        id\n                        url\n                    }\n                    createdAt\n                    updatedAt\n                    email\n                    firstName\n                    lastName\n                    fullName\n                    gender\n                    phoneNumber {\n                        raw\n                        href\n                    }\n                    note\n                    street\n                    zipCode\n                    city\n                    birthday\n                    appointments {\n                        nodes {\n                            id\n                            createdAt\n                            updatedAt\n                            desc\n                            start\n                            end\n                            price {\n                                value\n                                displayValue\n                            }\n                            duration\n                            status\n                            note\n                            beforeImage {\n                                id\n                                url\n                            }\n                            afterImage {\n                                id\n                                url\n                            }\n                            employee {\n                                type\n                                id\n                                image {\n                                    id\n                                    url\n                                }\n                                createdAt\n                                updatedAt\n                                email\n                                firstName\n                                lastName\n                                fullName\n                                gender\n                                phoneNumber {\n                                    raw\n                                    href\n                                }\n                                street\n                                zipCode\n                                city\n                                birthday\n                                # appointments\n                            }\n                            # customer\n                        }\n                    }\n                    # reviews\n                }\n                # appointment\n            }\n        }\n    }\n}",
								"variables": "{\n\t\"appointmentId\": \"{{currentAppointmentId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Approve appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($appointmentId: ID!) {\n    staffApproveAppointment(\n        input: {\n            id: $appointmentId\n            patch: {\n                desc: \"Bestätigter Termin\"\n                note: \"Mehr Notiz zum Termin\"\n            }\n        }\n    ) {\n        appointment {\n            id\n            createdAt\n            updatedAt\n            desc\n            start\n            end\n            price {\n                value\n                displayValue\n            }\n            duration\n            status\n            note\n            beforeImage {\n                id\n                url\n            }\n            afterImage {\n                id\n                url\n            }\n            customer {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                note\n                street\n                zipCode\n                city\n                birthday\n                # appointments\n            }\n            # employee\n            viewerCanReview\n            review {\n                id\n                createdAt\n                updatedAt\n                stars\n                title\n                text\n                type\n                customer {\n                    type\n                    id\n                    image {\n                        id\n                        url\n                    }\n                    createdAt\n                    updatedAt\n                    email\n                    firstName\n                    lastName\n                    fullName\n                    gender\n                    phoneNumber {\n                        raw\n                        href\n                    }\n                    note\n                    street\n                    zipCode\n                    city\n                    birthday\n                    appointments {\n                        nodes {\n                            id\n                            createdAt\n                            updatedAt\n                            desc\n                            start\n                            end\n                            price {\n                                value\n                                displayValue\n                            }\n                            duration\n                            status\n                            note\n                            beforeImage {\n                                id\n                                url\n                            }\n                            afterImage {\n                                id\n                                url\n                            }\n                            employee {\n                                type\n                                id\n                                image {\n                                    id\n                                    url\n                                }\n                                createdAt\n                                updatedAt\n                                email\n                                firstName\n                                lastName\n                                fullName\n                                gender\n                                phoneNumber {\n                                    raw\n                                    href\n                                }\n                                street\n                                zipCode\n                                city\n                                birthday\n                                # appointments\n                            }\n                            # customer\n                        }\n                    }\n                    # reviews\n                }\n                # appointment\n            }\n            products {\n                item {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    desc\n                    price {\n                        value\n                        displayValue\n                    }\n                    capacity\n                    category\n                    image {\n                        id\n                        url\n                    }\n                    attributes {\n                        key\n                        name\n                        value\n                    }\n                }\n                count\n            }\n            services {\n                id\n                createdAt\n                updatedAt\n                name\n                desc\n                price {\n                    value\n                    displayValue\n                }\n                duration\n                genderTarget\n                image {\n                    id\n                    url\n                }\n                attributes {\n                    key\n                    name\n                    value\n                }\n            }\n        }\n    }\n}",
								"variables": "{\n\t\"appointmentId\": \"{{currentAppointmentId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"john@customers.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update before image",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\":\"mutation($appointmentId: ID!, $imageFile: Upload!) { updateBeforeImage(input: { appointment: $appointmentId image: $imageFile }) { appointment { id createdAt updatedAt desc start end price { value displayValue } duration status note beforeImage { id url } afterImage { id url } employee { type id image { id url } createdAt updatedAt email firstName lastName fullName gender phoneNumber { raw href } street city zipCode birthday } viewerCanReview review { id createdAt updatedAt stars title text type customer { type id image { id url } createdAt updatedAt email firstName lastName fullName gender phoneNumber { raw href } note street city zipCode birthday appointments { nodes { id createdAt updatedAt desc start end price { value displayValue } duration status note beforeImage { id url } afterImage { id url } employee { type id image { id url } createdAt updatedAt email firstName lastName fullName gender phoneNumber { raw href } street city zipCode birthday } } } } } } } }\",\"variables\":{\"appointmentId\": \"{{currentAppointmentId}}\", \"imageFile\": null } }",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img3.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update after image",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\":\"mutation($appointmentId: ID!, $imageFile: Upload!) { updateAfterImage(input: { appointment: $appointmentId image: $imageFile }) { appointment { id createdAt updatedAt desc start end price { value displayValue } duration status note beforeImage { id url } afterImage { id url } employee { type id image { id url } createdAt updatedAt email firstName lastName fullName gender phoneNumber { raw href } street city zipCode birthday } viewerCanReview review { id createdAt updatedAt stars title text type customer { type id image { id url } createdAt updatedAt email firstName lastName fullName gender phoneNumber { raw href } note street city zipCode birthday appointments { nodes { id createdAt updatedAt desc start end price { value displayValue } duration status note beforeImage { id url } afterImage { id url } employee { type id image { id url } createdAt updatedAt email firstName lastName fullName gender phoneNumber { raw href } street city zipCode birthday } } } } } } } }\",\"variables\":{\"appointmentId\": \"{{currentAppointmentId}}\", \"imageFile\": null } }",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img4.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($appointmentId: ID!) {\n    cancelAppointment(\n        input: {\n            id: $appointmentId\n        }\n    ) {\n        appointment {\n            id\n            createdAt\n            updatedAt\n            desc\n            start\n            end\n            price {\n                value\n                displayValue\n            }\n            duration\n            status\n            note\n            beforeImage {\n                id\n                url\n            }\n            afterImage {\n                id\n                url\n            }\n            employee {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                street\n                zipCode\n                city\n                birthday\n                # appointments\n            }\n            viewerCanReview\n            # customer\n            # review\n        }\n    }\n}",
								"variables": "{\n\t\"appointmentId\": \"{{currentAppointmentId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Employee appointment life cycle",
			"item": [
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)\r",
									"postman.setEnvironmentVariable('currentBranchName', jsonData.data.currentCompany.branches.nodes[0].name)\r",
									"postman.setEnvironmentVariable('currentBranchAddress', jsonData.data.currentCompany.branches.nodes[0].address)\r",
									"postman.setEnvironmentVariable('currentBranchPhoneNumber', jsonData.data.currentCompany.branches.nodes[0].phoneNumber.raw)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursDay', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].day)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursClosed', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].closed)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursBreak', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].break)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).end)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).end)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentProductId', jsonData.data.products.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    products(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            capacity\r\n            category\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    street\r\n                                    zipCode\r\n                                    city\r\n                                    birthday\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Services for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentServiceId', jsonData.data.services.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    services(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            duration\r\n            genderTarget\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    street\r\n                                    zipCode\r\n                                    city\r\n                                    birthday\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customers for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCustomerId', jsonData.data.customers.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    customers(input:{}) {\r\n        nodes {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            note\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee create appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentAppointmentId', jsonData.data.staffCreateAppointment.appointment.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!, $productId: ID!, $serviceId: ID!, $customerId: ID!) {\r\n    staffCreateAppointment(\r\n        input: {\r\n            branch: $branchId\r\n            customer: $customerId\r\n            data: {\r\n                start: \"2021-12-31T10:00:00+02:00\"\r\n                desc: \"Termin\"\r\n                services: [{\r\n                    id: $serviceId\r\n                }]\r\n                products: [{\r\n                    id: $productId\r\n                    count: 1\r\n                }]\r\n            }\r\n        }\r\n    ) {\r\n        appointment {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            desc\r\n            start\r\n            end\r\n            price {\r\n                value\r\n                displayValue\r\n            }\r\n            duration\r\n            status\r\n            note\r\n            beforeImage {\r\n                id\r\n                url\r\n            }\r\n            afterImage {\r\n                id\r\n                url\r\n            }\r\n            customer {\r\n                type\r\n                id\r\n                image {\r\n                    id\r\n                    url\r\n                }\r\n                createdAt\r\n                updatedAt\r\n                email\r\n                firstName\r\n                lastName\r\n                fullName\r\n                gender\r\n                phoneNumber {\r\n                    raw\r\n                    href\r\n                }\r\n                note\r\n                street\r\n                zipCode\r\n                city\r\n                birthday\r\n                # appointments\r\n            }\r\n            # employee\r\n            viewerCanReview\r\n            review {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                stars\r\n                title\r\n                text\r\n                type\r\n                customer {\r\n                    type\r\n                    id\r\n                    image {\r\n                        id\r\n                        url\r\n                    }\r\n                    createdAt\r\n                    updatedAt\r\n                    email\r\n                    firstName\r\n                    lastName\r\n                    fullName\r\n                    gender\r\n                    phoneNumber {\r\n                        raw\r\n                        href\r\n                    }\r\n                    note\r\n                    street\r\n                    zipCode\r\n                    city\r\n                    birthday\r\n                    appointments {\r\n                        nodes {\r\n                            id\r\n                            createdAt\r\n                            updatedAt\r\n                            desc\r\n                            start\r\n                            end\r\n                            price {\r\n                                value\r\n                                displayValue\r\n                            }\r\n                            duration\r\n                            status\r\n                            note\r\n                            beforeImage {\r\n                                id\r\n                                url\r\n                            }\r\n                            afterImage {\r\n                                id\r\n                                url\r\n                            }\r\n                            employee {\r\n                                type\r\n                                id\r\n                                image {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                createdAt\r\n                                updatedAt\r\n                                email\r\n                                firstName\r\n                                lastName\r\n                                fullName\r\n                                gender\r\n                                phoneNumber {\r\n                                    raw\r\n                                    href\r\n                                }\r\n                                street\r\n                                zipCode\r\n                                city\r\n                                birthday\r\n                                # appointments\r\n                            }\r\n                            # customer\r\n                        }\r\n                    }\r\n                    # reviews\r\n                }\r\n                # appointment\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"branchId\": \"{{currentBranchId}}\",\n\t\"customerId\": \"{{currentCustomerId}}\",\n\t\"serviceId\": \"{{currentServiceId}}\",\n\t\"productId\": \"{{currentProductId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($appointmentId: ID!) {\n    cancelAppointment(\n        input: {\n            id: $appointmentId\n        }\n    ) {\n        appointment {\n            id\n            createdAt\n            updatedAt\n            desc\n            start\n            end\n            price {\n                value\n                displayValue\n            }\n            duration\n            status\n            note\n            beforeImage {\n                id\n                url\n            }\n            afterImage {\n                id\n                url\n            }\n            employee {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                street\n                zipCode\n                city\n                birthday\n                # appointments\n            }\n            viewerCanReview\n            # customer\n            # review\n        }\n    }\n}",
								"variables": "{\n\t\"appointmentId\": \"{{currentAppointmentId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Appointment localization",
			"item": [
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)\r",
									"postman.setEnvironmentVariable('currentBranchName', jsonData.data.currentCompany.branches.nodes[0].name)\r",
									"postman.setEnvironmentVariable('currentBranchAddress', jsonData.data.currentCompany.branches.nodes[0].address)\r",
									"postman.setEnvironmentVariable('currentBranchPhoneNumber', jsonData.data.currentCompany.branches.nodes[0].phoneNumber.raw)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursDay', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].day)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursClosed', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].closed)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursBreak', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].break)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).end)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).end)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentProductId', jsonData.data.products.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    products(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            capacity\r\n            category\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    street\r\n                                    zipCode\r\n                                    city\r\n                                    birthday\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Services for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentServiceId', jsonData.data.services.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    services(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            duration\r\n            genderTarget\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    street\r\n                                    zipCode\r\n                                    city\r\n                                    birthday\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customers for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCustomerId', jsonData.data.customers.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    customers(input:{}) {\r\n        nodes {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            note\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee create appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentAppointmentId', jsonData.data.staffCreateAppointment.appointment.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!, $productId: ID!, $serviceId: ID!, $customerId: ID!) {\r\n    staffCreateAppointment(\r\n        input: {\r\n            branch: $branchId\r\n            customer: $customerId\r\n            data: {\r\n                start: \"2021-12-31T10:00:00+02:00\"\r\n                desc: \"Termin\"\r\n                services: [{\r\n                    id: $serviceId\r\n                }]\r\n                products: [{\r\n                    id: $productId\r\n                    count: 1\r\n                }]\r\n            }\r\n        }\r\n    ) {\r\n        appointment {\r\n            id\r\n            desc\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"branchId\": \"{{currentBranchId}}\",\n\t\"customerId\": \"{{currentCustomerId}}\",\n\t\"serviceId\": \"{{currentServiceId}}\",\n\t\"productId\": \"{{currentProductId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee update appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($appointmentId: ID!) {\r\n    staffUpdateAppointment(\r\n        input: {\r\n            id: $appointmentId\r\n            patch: {\r\n                desc: \"Termin (tr)\"\r\n            }\r\n        }\r\n        language: \"tr\"\r\n    ) {\r\n        appointment {\r\n            id\r\n            desc\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"appointmentId\": \"{{currentAppointmentId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($appointmentId: ID!) {\r\n    staffUpdateAppointment(\r\n        input: {\r\n            id: $appointmentId\r\n            patch: {\r\n            }\r\n        }\r\n        language: \"tr\"\r\n    ) {\r\n        appointment {\r\n            id\r\n            desc\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"appointmentId\": \"{{currentAppointmentId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($appointmentId: ID!) {\n    cancelAppointment(\n        input: {\n            id: $appointmentId\n        }\n    ) {\n        appointment {\n            id\n            createdAt\n            updatedAt\n            desc\n            start\n            end\n            price {\n                value\n                displayValue\n            }\n            duration\n            status\n            note\n            beforeImage {\n                id\n                url\n            }\n            afterImage {\n                id\n                url\n            }\n            employee {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                street\n                zipCode\n                city\n                birthday\n                # appointments\n            }\n            # customer\n            # review\n        }\n    }\n}",
								"variables": "{\n\t\"appointmentId\": \"{{currentAppointmentId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Company life cycle",
			"item": [
				{
					"name": "Login as administrator",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"admin@example.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdCompanyId', jsonData.data.createCompany.company.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\": \"mutation($logoFile:Upload!, $pwaIconFile:Upload!) { createCompany(input: { data: { name: \\\"Neue Firma\\\" aliases: [\\\"abc\\\"] customUrls: [\\\"example.com\\\"] sharingRedirectUrl: \\\"share.me\\\" logo: $logoFile appTheme: \\\"classic\\\" pwaShortName:\\\"PWA Name\\\" pwaIcon: $pwaIconFile pwaThemeColor:\\\"black\\\" pwaBackgroundColor:\\\"black\\\" } }) { company { id createdAt updatedAt name logo { id url } appTheme aliases customUrls sharingRedirectUrl pwaShortName pwaIcon { id url } pwaThemeColor pwaBackgroundColor branches { nodes { id createdAt updatedAt name welcomeMessage phoneNumber { raw href } address image { id url } openingHours { formatted { key closed break shortDay fullDay value } raw { day closed break shortDay fullDay forenoon { start end } afternoon { start end } } } } } } } }\", \"variables\": {\"logoFile\": null,\"pwaIconFile\":null } } }",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.logoFile\"], \"1\":[\"variables.pwaIconFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img2.jpg"
								},
								{
									"key": "1",
									"type": "file",
									"src": "fixtures/img4.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\": \"mutation($companyId: ID!, $logoFile: Upload!, $pwaIconFile: Upload!) { updateCompany(input: { id: $companyId patch: { name: \\\"Neuer Firmenname\\\" aliases: [\\\"abc\\\", \\\"example\\\", \\\"company\\\"] customUrls: [\\\"dattelapp.de\\\"] sharingRedirectUrl: \\\"https://original.uri\\\" logo: $logoFile appTheme: \\\"modern\\\" pwaShortName:\\\"Firmenapp\\\" pwaIcon: $pwaIconFile pwaThemeColor:\\\"white\\\" pwaBackgroundColor:\\\"white\\\" } }) { company { id createdAt updatedAt name logo { id url } appTheme aliases customUrls sharingRedirectUrl branches { nodes { id createdAt updatedAt name welcomeMessage phoneNumber { raw href } address image { id url } openingHours { formatted { key closed break shortDay fullDay value } raw { day closed break shortDay fullDay forenoon { start end } afternoon { start end } } } } } } } }\", \"variables\": {\"companyId\": \"{{createdCompanyId}}\", \"logoFile\": null, \"pwaIconFile\": null} } }",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.logoFile\"], \"1\":[\"variables.pwaIconFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img4.jpg"
								},
								{
									"key": "1",
									"type": "file",
									"src": "fixtures/applogo.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($companyId: ID!) {\n    deleteCompany(input: {\n        id: $companyId\n    }) {\n        company {\n            id\n            createdAt\n            updatedAt\n            name\n            customUrls\n            aliases\n            sharingRedirectUrl\n            branches {\n                nodes {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    welcomeMessage\n                    phoneNumber {\n                        raw\n                        href\n                    }\n                    address\n                    image {\n                        id\n                        url\n                    }\n                    # company\n                    openingHours {\n                        formatted {\n                            key\n                            closed\n                            break\n                            shortDay\n                            fullDay\n                            value\n                        }\n                        raw {\n                            day\n                            closed\n                            break\n                            shortDay\n                            fullDay\n                            forenoon {\n                                start\n                                end\n                            }\n                            afternoon {\n                                start\n                                end\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": "{\n\t\"companyId\": \"{{createdCompanyId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product review life cycle",
			"item": [
				{
					"name": "Login as customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"john@customers.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)\r",
									"postman.setEnvironmentVariable('currentBranchName', jsonData.data.currentCompany.branches.nodes[0].name)\r",
									"postman.setEnvironmentVariable('currentBranchAddress', jsonData.data.currentCompany.branches.nodes[0].address)\r",
									"postman.setEnvironmentVariable('currentBranchPhoneNumber', jsonData.data.currentCompany.branches.nodes[0].phoneNumber.raw)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursDay', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].day)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursClosed', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].closed)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursBreak', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].break)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).end)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).end)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentProductId', jsonData.data.products.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    products(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            capacity\r\n            category\r\n            image {\r\n                id\r\n                url\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create product review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdReviewId', jsonData.data.upsertReview.review.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($productId: ID!) {\r\n    upsertReview(input: {\r\n        product: $productId,\r\n        data: {\r\n            stars: 5,\r\n            title: \"Zusammenfassung\"\r\n            text: \"Tolles Produkt!\"\r\n        }\r\n    }) {\r\n        review {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            stars\r\n            title\r\n            text\r\n            type\r\n            customer {\r\n                type\r\n                id\r\n                image {\r\n                    id\r\n                    url\r\n                }\r\n                createdAt\r\n                updatedAt\r\n                email\r\n                firstName\r\n                lastName\r\n                fullName\r\n                gender\r\n                phoneNumber {\r\n                    raw\r\n                    href\r\n                }\r\n                note\r\n                street\r\n                zipCode\r\n                city\r\n                birthday\r\n                appointments {\r\n                    nodes {\r\n                        id\r\n                        createdAt\r\n                        updatedAt\r\n                        desc\r\n                        start\r\n                        end\r\n                        price {\r\n                            value\r\n                            displayValue\r\n                        }\r\n                        duration\r\n                        status\r\n                        note\r\n                        beforeImage {\r\n                            id\r\n                            url\r\n                        }\r\n                        afterImage {\r\n                            id\r\n                            url\r\n                        }\r\n                        employee {\r\n                            type\r\n                            id\r\n                            image {\r\n                                id\r\n                                url\r\n                            }\r\n                            createdAt\r\n                            updatedAt\r\n                            email\r\n                            firstName\r\n                            lastName\r\n                            fullName\r\n                            gender\r\n                            phoneNumber {\r\n                                raw\r\n                                href\r\n                            }\r\n                            street\r\n                            zipCode\r\n                            city\r\n                            birthday\r\n                            # appointments\r\n                        }\r\n                        # customer\r\n                    }\r\n                }\r\n                # reviews\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": "{\r\n\t\"productId\": \"{{currentProductId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update product review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($productId: ID!) {\r\n    upsertReview(input: {\r\n        product: $productId,\r\n        data: {\r\n            stars: 1,\r\n            title: \"Schlecht\"\r\n            text: \"Ganz schlechtes Produkt! Nie wieder!\"\r\n        }\r\n    }) {\r\n        review {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            stars\r\n            title\r\n            text\r\n            type\r\n            customer {\r\n                type\r\n                id\r\n                image {\r\n                    id\r\n                    url\r\n                }\r\n                createdAt\r\n                updatedAt\r\n                email\r\n                firstName\r\n                lastName\r\n                fullName\r\n                gender\r\n                phoneNumber {\r\n                    raw\r\n                    href\r\n                }\r\n                note\r\n                street\r\n                zipCode\r\n                city\r\n                birthday\r\n                appointments {\r\n                    nodes {\r\n                        id\r\n                        createdAt\r\n                        updatedAt\r\n                        desc\r\n                        start\r\n                        end\r\n                        price {\r\n                            value\r\n                            displayValue\r\n                        }\r\n                        duration\r\n                        status\r\n                        note\r\n                        beforeImage {\r\n                            id\r\n                            url\r\n                        }\r\n                        afterImage {\r\n                            id\r\n                            url\r\n                        }\r\n                        employee {\r\n                            type\r\n                            id\r\n                            image {\r\n                                id\r\n                                url\r\n                            }\r\n                            createdAt\r\n                            updatedAt\r\n                            email\r\n                            firstName\r\n                            lastName\r\n                            fullName\r\n                            gender\r\n                            phoneNumber {\r\n                                raw\r\n                                href\r\n                            }\r\n                            street\r\n                            zipCode\r\n                            city\r\n                            birthday\r\n                            # appointments\r\n                        }\r\n                        # customer\r\n                    }\r\n                }\r\n                # reviews\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": "{\r\n\t\"productId\": \"{{currentProductId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update review by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($reviewId: ID!) {\r\n    upsertReview(input: {\r\n        review: $reviewId,\r\n        data: {\r\n            stars: 3,\r\n            title: \"OK\"\r\n            text: \"War ok\"\r\n        }\r\n    }) {\r\n        review {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            stars\r\n            title\r\n            text\r\n            type\r\n            customer {\r\n                type\r\n                id\r\n                image {\r\n                    id\r\n                    url\r\n                }\r\n                createdAt\r\n                updatedAt\r\n                email\r\n                firstName\r\n                lastName\r\n                fullName\r\n                gender\r\n                phoneNumber {\r\n                    raw\r\n                    href\r\n                }\r\n                note\r\n                street\r\n                zipCode\r\n                city\r\n                birthday\r\n                appointments {\r\n                    nodes {\r\n                        id\r\n                        createdAt\r\n                        updatedAt\r\n                        desc\r\n                        start\r\n                        end\r\n                        price {\r\n                            value\r\n                            displayValue\r\n                        }\r\n                        duration\r\n                        status\r\n                        note\r\n                        beforeImage {\r\n                            id\r\n                            url\r\n                        }\r\n                        afterImage {\r\n                            id\r\n                            url\r\n                        }\r\n                        employee {\r\n                            type\r\n                            id\r\n                            image {\r\n                                id\r\n                                url\r\n                            }\r\n                            createdAt\r\n                            updatedAt\r\n                            email\r\n                            firstName\r\n                            lastName\r\n                            fullName\r\n                            gender\r\n                            phoneNumber {\r\n                                raw\r\n                                href\r\n                            }\r\n                            street\r\n                            zipCode\r\n                            city\r\n                            birthday\r\n                            # appointments\r\n                        }\r\n                        # customer\r\n                    }\r\n                }\r\n                # reviews\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": "{\r\n\t\"reviewId\": \"{{createdReviewId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete product review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($reviewId: ID!) {\n    deleteReview(id: $reviewId) {\n        review {\n            id\n            createdAt\n            updatedAt\n            stars\n            title\n            text\n            type\n            # customer\n            # product\n        }\n    }\n}",
								"variables": "{\n\t\"reviewId\": \"{{createdReviewId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Service review life cycle",
			"item": [
				{
					"name": "Login as customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"john@customers.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)\r",
									"postman.setEnvironmentVariable('currentBranchName', jsonData.data.currentCompany.branches.nodes[0].name)\r",
									"postman.setEnvironmentVariable('currentBranchAddress', jsonData.data.currentCompany.branches.nodes[0].address)\r",
									"postman.setEnvironmentVariable('currentBranchPhoneNumber', jsonData.data.currentCompany.branches.nodes[0].phoneNumber.raw)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursDay', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].day)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursClosed', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].closed)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursBreak', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].break)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).end)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).end)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Services for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentServiceId', jsonData.data.services.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    services(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            duration\r\n            genderTarget\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviewAggregations {\r\n                totalCount\r\n                averageRating\r\n                countPerStar\r\n            }\r\n            viewerCanReview\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    customer {\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create service review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdReviewId', jsonData.data.upsertReview.review.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($serviceId: ID!) {\n    upsertReview(input: {\n        service: $serviceId,\n        data: {\n            stars: 5,\n            title: \"Zusammenfassung\"\n            text: \"Tolle Leistung!\"\n        }\n    }) {\n        review {\n            id\n            createdAt\n            updatedAt\n            stars\n            title\n            text\n            type\n            customer {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                note\n                street\n                zipCode\n                city\n                birthday\n                appointments {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        desc\n                        start\n                        end\n                        price {\n                            value\n                            displayValue\n                        }\n                        duration\n                        status\n                        note\n                        beforeImage {\n                            id\n                            url\n                        }\n                        afterImage {\n                            id\n                            url\n                        }\n                        employee {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            street\n                            zipCode\n                            city\n                            birthday\n                            # appointments\n                        }\n                        # customer\n                    }\n                }\n                # reviews\n            }\n            ... on ServiceReview {\n                service {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    desc\n                    price {\n                        value\n                        displayValue\n                    }\n                    duration\n                    genderTarget\n                    image {\n                        id\n                        url\n                    }\n                    # reviews\n                    reviewAggregations {\n                        totalCount\n                        averageRating\n                        countPerStar\n                    }\n                    viewerCanReview\n                    viewerReview {\n                        id\n                        createdAt\n                        updatedAt\n                        stars\n                        title\n                        text\n                        type\n                        customer {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            note\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            appointments {\n                                nodes {\n                                    id\n                                    createdAt\n                                    updatedAt\n                                    desc\n                                    start\n                                    end\n                                    price {\n                                        value\n                                        displayValue\n                                    }\n                                    duration\n                                    status\n                                    note\n                                    beforeImage {\n                                        id\n                                        url\n                                    }\n                                    afterImage {\n                                        id\n                                        url\n                                    }\n                                    employee {\n                                        type\n                                        id\n                                        image {\n                                            id\n                                            url\n                                        }\n                                        createdAt\n                                        updatedAt\n                                        email\n                                        firstName\n                                        lastName\n                                        fullName\n                                        gender\n                                        phoneNumber {\n                                            raw\n                                            href\n                                        }\n                                        # appointments\n                                    }\n                                    # customer\n                                }\n                            }\n                            # reviews\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": "{\n\t\"serviceId\": \"{{currentServiceId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update service review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($reviewId: ID!) {\n    upsertReview(input: {\n        review: $reviewId,\n        data: {\n            stars: 1,\n            title: \"Schlecht\"\n            text: \"Ganz schlechte Leistung! Nie wieder!\"\n        }\n    }) {\n        review {\n            id\n            createdAt\n            updatedAt\n            stars\n            title\n            text\n            type\n            customer {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                note\n                street\n                zipCode\n                city\n                birthday\n                appointments {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        desc\n                        start\n                        end\n                        price {\n                            value\n                            displayValue\n                        }\n                        duration\n                        status\n                        note\n                        beforeImage {\n                            id\n                            url\n                        }\n                        afterImage {\n                            id\n                            url\n                        }\n                        employee {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            street\n                            zipCode\n                            city\n                            birthday\n                            # appointments\n                        }\n                        # customer\n                    }\n                }\n                # reviews\n            }\n            ... on ServiceReview {\n                service {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    desc\n                    price {\n                        value\n                        displayValue\n                    }\n                    duration\n                    genderTarget\n                    image {\n                        id\n                        url\n                    }\n                    # reviews\n                    reviewAggregations {\n                        totalCount\n                        averageRating\n                        countPerStar\n                    }\n                    viewerCanReview\n                    viewerReview {\n                        id\n                        createdAt\n                        updatedAt\n                        stars\n                        title\n                        text\n                        type\n                        customer {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            note\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            appointments {\n                                nodes {\n                                    id\n                                    createdAt\n                                    updatedAt\n                                    desc\n                                    start\n                                    end\n                                    price {\n                                        value\n                                        displayValue\n                                    }\n                                    duration\n                                    status\n                                    note\n                                    beforeImage {\n                                        id\n                                        url\n                                    }\n                                    afterImage {\n                                        id\n                                        url\n                                    }\n                                    employee {\n                                        type\n                                        id\n                                        image {\n                                            id\n                                            url\n                                        }\n                                        createdAt\n                                        updatedAt\n                                        email\n                                        firstName\n                                        lastName\n                                        fullName\n                                        gender\n                                        phoneNumber {\n                                            raw\n                                            href\n                                        }\n                                        # appointments\n                                    }\n                                    # customer\n                                }\n                            }\n                            # reviews\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": "{\n\t\"reviewId\": \"{{createdReviewId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Approve review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($reviewId: ID!) {\n    approveReview(id: $reviewId, status: APPROVED) {\n        review {\n            id\n            createdAt\n            updatedAt\n            stars\n            title\n            text\n            type\n            status\n            customer {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                note\n                street\n                zipCode\n                city\n                birthday\n                appointments {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        desc\n                        start\n                        end\n                        price {\n                            value\n                            displayValue\n                        }\n                        duration\n                        status\n                        note\n                        beforeImage {\n                            id\n                            url\n                        }\n                        afterImage {\n                            id\n                            url\n                        }\n                        employee {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            street\n                            zipCode\n                            city\n                            birthday\n                            # appointments\n                        }\n                        # customer\n                    }\n                }\n                # reviews\n            }\n        }\n    }\n}",
								"variables": "{\n\t\"reviewId\": \"{{createdReviewId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete service review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($reviewId: ID!) {\n    deleteReview(id: $reviewId) {\n        review {\n            id\n            createdAt\n            updatedAt\n            stars\n            title\n            text\n            type\n            # customer\n            # product\n        }\n    }\n}",
								"variables": "{\n\t\"reviewId\": \"{{createdReviewId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Appointment review life cycle",
			"item": [
				{
					"name": "Login as customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"john@customers.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)\r",
									"postman.setEnvironmentVariable('currentBranchName', jsonData.data.currentCompany.branches.nodes[0].name)\r",
									"postman.setEnvironmentVariable('currentBranchAddress', jsonData.data.currentCompany.branches.nodes[0].address)\r",
									"postman.setEnvironmentVariable('currentBranchPhoneNumber', jsonData.data.currentCompany.branches.nodes[0].phoneNumber.raw)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursDay', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].day)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursClosed', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].closed)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursBreak', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].break)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).end)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).end)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n                reviewAggregations {\n                    totalCount\n                    averageRating\n                    countPerStar\n                }\n                reviews {\n                    nodes {\n                        id\n                        stars\n                        status\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentProductId', jsonData.data.products.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    products(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            capacity\r\n            category\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    street\r\n                                    zipCode\r\n                                    city\r\n                                    birthday\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Services for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentServiceId', jsonData.data.services.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    services(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            duration\r\n            genderTarget\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    street\r\n                                    zipCode\r\n                                    city\r\n                                    birthday\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentAppointmentId', jsonData.data.customerRequestAppointment.appointment.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!, $productId: ID!, $serviceId: ID!) {\r\n    customerRequestAppointment(\r\n        input: {\r\n            branch: $branchId\r\n            data: {\r\n                start: \"2021-12-31T08:00:00+00:00\"\r\n                desc: \"Termin\"\r\n                services: [{\r\n                    id: $serviceId\r\n                }]\r\n                products: [{\r\n                    id: $productId\r\n                    count: 1\r\n                }]\r\n            }\r\n        }\r\n    ) {\r\n        appointment {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            desc\r\n            start\r\n            end\r\n            price {\r\n                value\r\n                displayValue\r\n            }\r\n            duration\r\n            status\r\n            note\r\n            beforeImage {\r\n                id\r\n                url\r\n            }\r\n            afterImage {\r\n                id\r\n                url\r\n            }\r\n            employee {\r\n                type\r\n                id\r\n                image {\r\n                    id\r\n                    url\r\n                }\r\n                createdAt\r\n                updatedAt\r\n                email\r\n                firstName\r\n                lastName\r\n                fullName\r\n                gender\r\n                phoneNumber {\r\n                    raw\r\n                    href\r\n                }\r\n                street\r\n                zipCode\r\n                city\r\n                birthday\r\n                # appointments\r\n            }\r\n            # customer\r\n            viewerCanReview\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"branchId\": \"{{currentBranchId}}\",\n\t\"serviceId\": \"{{currentServiceId}}\",\n\t\"productId\": \"{{currentProductId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"jane@employees.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Approve appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($appointmentId: ID!) {\n    staffApproveAppointment(\n        input: {\n            id: $appointmentId\n            patch: {\n                desc: \"Bestätigter Termin\"\n                note: \"Mehr Notiz zum Termin\"\n            }\n        }\n    ) {\n        appointment {\n            id\n            createdAt\n            updatedAt\n            desc\n            start\n            end\n            price {\n                value\n                displayValue\n            }\n            duration\n            status\n            note\n            beforeImage {\n                id\n                url\n            }\n            afterImage {\n                id\n                url\n            }\n            customer {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                note\n                street\n                zipCode\n                city\n                birthday\n                # appointments\n            }\n            # employee\n            viewerCanReview\n        }\n    }\n}",
								"variables": "{\n\t\"appointmentId\": \"{{currentAppointmentId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"john@customers.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create appointment review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdReviewId', jsonData.data.upsertReview.review.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($appointmentId: ID!) {\n    upsertReview(input: {\n        appointment: $appointmentId,\n        data: {\n            stars: 5,\n            title: \"Zusammenfassung\"\n            text: \"Schnell und zufriedenstellend!\"\n        }\n    }) {\n        review {\n            id\n            createdAt\n            updatedAt\n            stars\n            title\n            text\n            type\n            customer {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                note\n                street\n                zipCode\n                city\n                birthday\n                appointments {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        desc\n                        start\n                        end\n                        price {\n                            value\n                            displayValue\n                        }\n                        duration\n                        status\n                        note\n                        beforeImage {\n                            id\n                            url\n                        }\n                        afterImage {\n                            id\n                            url\n                        }\n                        employee {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            street\n                            zipCode\n                            city\n                            birthday\n                            # appointments\n                        }\n                        # customer\n                    }\n                }\n                # reviews\n            }\n            ... on AppointmentReview {\n                appointment {\n                    id\n                    createdAt\n                    updatedAt\n                    desc\n                    start\n                    end\n                    price {\n                        value\n                        displayValue\n                    }\n                    duration\n                    status\n                    note\n                    beforeImage {\n                        id\n                        url\n                    }\n                    afterImage {\n                        id\n                        url\n                    }\n                    employee {\n                        type\n                        id\n                        image {\n                            id\n                            url\n                        }\n                        createdAt\n                        updatedAt\n                        email\n                        firstName\n                        lastName\n                        fullName\n                        gender\n                        phoneNumber {\n                            raw\n                            href\n                        }\n                        # appointments\n                    }\n                    # customer\n                    # review\n                    viewerCanReview\n                    viewerReview {\n                        id\n                        createdAt\n                        updatedAt\n                        stars\n                        title\n                        text\n                        type\n                        customer {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            note\n                            street\n                            zipCode\n                            city\n                            birthday\n                            appointments {\n                                nodes {\n                                    id\n                                    createdAt\n                                    updatedAt\n                                    desc\n                                    start\n                                    end\n                                    price {\n                                        value\n                                        displayValue\n                                    }\n                                    duration\n                                    status\n                                    note\n                                    beforeImage {\n                                        id\n                                        url\n                                    }\n                                    afterImage {\n                                        id\n                                        url\n                                    }\n                                    employee {\n                                        type\n                                        id\n                                        image {\n                                            id\n                                            url\n                                        }\n                                        createdAt\n                                        updatedAt\n                                        email\n                                        firstName\n                                        lastName\n                                        fullName\n                                        gender\n                                        phoneNumber {\n                                            raw\n                                            href\n                                        }\n                                        street\n                                        zipCode\n                                        city\n                                        birthday\n                                        # appointments\n                                    }\n                                    # customer\n                                }\n                            }\n                            # reviews\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": "{\n\t\"appointmentId\": \"{{currentAppointmentId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update appointment review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($reviewId: ID!) {\n    upsertReview(input: {\n        review: $reviewId,\n        data: {\n            stars: 1,\n            title: \"Schlecht\"\n            text: \"Ganz schlechte Leistung! Nie wieder!\"\n        }\n    }) {\n        review {\n            id\n            createdAt\n            updatedAt\n            stars\n            title\n            text\n            type\n            customer {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                note\n                street\n                zipCode\n                city\n                birthday\n                appointments {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        desc\n                        start\n                        end\n                        price {\n                            value\n                            displayValue\n                        }\n                        duration\n                        status\n                        note\n                        beforeImage {\n                            id\n                            url\n                        }\n                        afterImage {\n                            id\n                            url\n                        }\n                        employee {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            street\n                            zipCode\n                            city\n                            birthday\n                            # appointments\n                        }\n                        # customer\n                    }\n                }\n                # reviews\n            }\n            ... on AppointmentReview {\n                appointment {\n                    id\n                    createdAt\n                    updatedAt\n                    desc\n                    start\n                    end\n                    price {\n                        value\n                        displayValue\n                    }\n                    duration\n                    status\n                    note\n                    beforeImage {\n                        id\n                        url\n                    }\n                    afterImage {\n                        id\n                        url\n                    }\n                    employee {\n                        type\n                        id\n                        image {\n                            id\n                            url\n                        }\n                        createdAt\n                        updatedAt\n                        email\n                        firstName\n                        lastName\n                        fullName\n                        gender\n                        phoneNumber {\n                            raw\n                            href\n                        }\n                        # appointments\n                    }\n                    # customer\n                    # review\n                    viewerCanReview\n                    viewerReview {\n                        id\n                        createdAt\n                        updatedAt\n                        stars\n                        title\n                        text\n                        type\n                        customer {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            note\n                            street\n                            zipCode\n                            city\n                            birthday\n                            appointments {\n                                nodes {\n                                    id\n                                    createdAt\n                                    updatedAt\n                                    desc\n                                    start\n                                    end\n                                    price {\n                                        value\n                                        displayValue\n                                    }\n                                    duration\n                                    status\n                                    note\n                                    beforeImage {\n                                        id\n                                        url\n                                    }\n                                    afterImage {\n                                        id\n                                        url\n                                    }\n                                    employee {\n                                        type\n                                        id\n                                        image {\n                                            id\n                                            url\n                                        }\n                                        createdAt\n                                        updatedAt\n                                        email\n                                        firstName\n                                        lastName\n                                        fullName\n                                        gender\n                                        phoneNumber {\n                                            raw\n                                            href\n                                        }\n                                        street\n                                        zipCode\n                                        city\n                                        birthday\n                                        # appointments\n                                    }\n                                    # customer\n                                }\n                            }\n                            # reviews\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": "{\n\t\"reviewId\": \"{{createdReviewId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete appointment review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($reviewId: ID!) {\n    deleteReview(id: $reviewId) {\n        review {\n            id\n            createdAt\n            updatedAt\n            stars\n            title\n            text\n            type\n            # customer\n            # appointment\n        }\n    }\n}",
								"variables": "{\n\t\"reviewId\": \"{{createdReviewId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($appointmentId: ID!) {\n    cancelAppointment(\n        input: {\n            id: $appointmentId\n        }\n    ) {\n        appointment {\n            id\n            createdAt\n            updatedAt\n            desc\n            start\n            end\n            price {\n                value\n                displayValue\n            }\n            duration\n            status\n            note\n            beforeImage {\n                id\n                url\n            }\n            afterImage {\n                id\n                url\n            }\n            employee {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                street\n                zipCode\n                city\n                birthday\n                # appointments\n            }\n            viewerCanReview\n            # customer\n            # review\n        }\n    }\n}",
								"variables": "{\n\t\"appointmentId\": \"{{currentAppointmentId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Favorites life cycle",
			"item": [
				{
					"name": "Login as customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"john@customers.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)\r",
									"postman.setEnvironmentVariable('currentBranchName', jsonData.data.currentCompany.branches.nodes[0].name)\r",
									"postman.setEnvironmentVariable('currentBranchAddress', jsonData.data.currentCompany.branches.nodes[0].address)\r",
									"postman.setEnvironmentVariable('currentBranchPhoneNumber', jsonData.data.currentCompany.branches.nodes[0].phoneNumber.raw)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursDay', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].day)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursClosed', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].closed)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursBreak', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].break)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).end)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).end)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentProductId', jsonData.data.products.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    products(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            capacity\r\n            category\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    street\r\n                                    zipCode\r\n                                    city\r\n                                    birthday\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Services for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentServiceId', jsonData.data.services.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    services(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            duration\r\n            genderTarget\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    street\r\n                                    zipCode\r\n                                    city\r\n                                    birthday\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create product favorite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdProductFavoriteId', jsonData.data.createFavorite.favorite.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($productId: ID) {\n    createFavorite(input: {\n        data: {\n            product: $productId\n        }\n    }) {\n        favorite {\n            id\n            user {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                street\n                zipCode\n                city\n                birthday\n            }\n            product {\n                id\n                createdAt\n                updatedAt\n                name\n                desc\n                price {\n                    value\n                    displayValue\n            \t}\n                capacity\n                category\n                image {\n                    id\n                    url\n                }\n                viewerCanReview\n                reviews {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        stars\n                        title\n                        text\n                        type\n                        customer {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            note\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            street\n                            zipCode\n                            city\n                            birthday\n                            appointments {\n                                nodes {\n                                    id\n                                    createdAt\n                                    updatedAt\n                                    desc\n                                    start\n                                    end\n                                    price {\n                                        value\n                                        displayValue\n                                    }\n                                    duration\n                                    status\n                                    note\n                                    beforeImage {\n                                        id\n                                        url\n                                    }\n                                    afterImage {\n                                        id\n                                        url\n                                    }\n                                    employee {\n                                        type\n                                        id\n                                        image {\n                                            id\n                                            url\n                                        }\n                                        createdAt\n                                        updatedAt\n                                        email\n                                        firstName\n                                        lastName\n                                        fullName\n                                        gender\n                                        phoneNumber {\n                                            raw\n                                            href\n                                        }\n                                        street\n                                        zipCode\n                                        city\n                                        birthday\n                                        # appointments\n                                    }\n                                    # customer\n                                }\n                            }\n                            # reviews\n                        }\n                    }\n                }\n            }\n            service {\n                id\n                createdAt\n                updatedAt\n                name\n                desc\n                price {\n                    value\n                    displayValue\n            \t}\n                duration\n                genderTarget\n                image {\n                    id\n                    url\n                }\n                reviews {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        stars\n                        title\n                        text\n                        type\n                        customer {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            note\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            appointments {\n                                nodes {\n                                    id\n                                    createdAt\n                                    updatedAt\n                                    desc\n                                    start\n                                    end\n                                    price {\n                                        value\n                                        displayValue\n                                    }\n                                    duration\n                                    status\n                                    note\n                                    beforeImage {\n                                        id\n                                        url\n                                    }\n                                    afterImage {\n                                        id\n                                        url\n                                    }\n                                    employee {\n                                        type\n                                        id\n                                        image {\n                                            id\n                                            url\n                                        }\n                                        createdAt\n                                        updatedAt\n                                        email\n                                        firstName\n                                        lastName\n                                        fullName\n                                        gender\n                                        phoneNumber {\n                                            raw\n                                            href\n                                        }\n                                        # appointments\n                                    }\n                                    # customer\n                                }\n                            }\n                            # reviews\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": "{\n\t\"productId\": \"{{currentProductId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete product favorite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($favoriteId: ID!) {\n    deleteFavorite(input: {\n        id: $favoriteId\n    }) {\n        favorite {\n            id\n            # user\n            # product\n            # service\n        }\n    }\n}",
								"variables": "{\n\t\"favoriteId\": \"{{createdProductFavoriteId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create service favorite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdServiceFavoriteId', jsonData.data.createFavorite.favorite.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($serviceId: ID) {\n    createFavorite(input: {\n        data: {\n            service: $serviceId\n        }\n    }) {\n        favorite {\n            id\n            user {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                street\n                zipCode\n                city\n                birthday\n            }\n            product {\n                id\n                createdAt\n                updatedAt\n                name\n                desc\n                price {\n                    value\n                    displayValue\n            \t}\n                capacity\n                category\n                image {\n                    id\n                    url\n                }\n                viewerCanReview\n                reviews {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        stars\n                        title\n                        text\n                        type\n                        customer {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            note\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            street\n                            zipCode\n                            city\n                            birthday\n                            appointments {\n                                nodes {\n                                    id\n                                    createdAt\n                                    updatedAt\n                                    desc\n                                    start\n                                    end\n                                    price {\n                                        value\n                                        displayValue\n                                    }\n                                    duration\n                                    status\n                                    note\n                                    beforeImage {\n                                        id\n                                        url\n                                    }\n                                    afterImage {\n                                        id\n                                        url\n                                    }\n                                    employee {\n                                        type\n                                        id\n                                        image {\n                                            id\n                                            url\n                                        }\n                                        createdAt\n                                        updatedAt\n                                        email\n                                        firstName\n                                        lastName\n                                        fullName\n                                        gender\n                                        phoneNumber {\n                                            raw\n                                            href\n                                        }\n                                        street\n                                        zipCode\n                                        city\n                                        birthday\n                                        # appointments\n                                    }\n                                    # customer\n                                }\n                            }\n                            # reviews\n                        }\n                    }\n                }\n            }\n            service {\n                id\n                createdAt\n                updatedAt\n                name\n                desc\n                price {\n                    value\n                    displayValue\n            \t}\n                duration\n                genderTarget\n                image {\n                    id\n                    url\n                }\n                reviews {\n                    nodes {\n                        id\n                        createdAt\n                        updatedAt\n                        stars\n                        title\n                        text\n                        type\n                        customer {\n                            type\n                            id\n                            image {\n                                id\n                                url\n                            }\n                            createdAt\n                            updatedAt\n                            email\n                            firstName\n                            lastName\n                            fullName\n                            gender\n                            note\n                            phoneNumber {\n                                raw\n                                href\n                            }\n                            appointments {\n                                nodes {\n                                    id\n                                    createdAt\n                                    updatedAt\n                                    desc\n                                    start\n                                    end\n                                    price {\n                                        value\n                                        displayValue\n                                    }\n                                    duration\n                                    status\n                                    note\n                                    beforeImage {\n                                        id\n                                        url\n                                    }\n                                    afterImage {\n                                        id\n                                        url\n                                    }\n                                    employee {\n                                        type\n                                        id\n                                        image {\n                                            id\n                                            url\n                                        }\n                                        createdAt\n                                        updatedAt\n                                        email\n                                        firstName\n                                        lastName\n                                        fullName\n                                        gender\n                                        phoneNumber {\n                                            raw\n                                            href\n                                        }\n                                        # appointments\n                                    }\n                                    # customer\n                                }\n                            }\n                            # reviews\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": "{\n\t\"serviceId\": \"{{currentServiceId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete service favorite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($favoriteId: ID!) {\n    deleteFavorite(input: {\n        id: $favoriteId\n    }) {\n        favorite {\n            id\n            # user\n            # product\n            # service\n        }\n    }\n}",
								"variables": "{\n\t\"favoriteId\": \"{{createdServiceFavoriteId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notification life cycle",
			"item": [
				{
					"name": "Login as customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"john@customers.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            notificationToken\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update notification token",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($notificationToken: String!) {\n    updateNotificationToken(input: {\n        token: $notificationToken\n    }) {\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            notificationToken\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": "{\r\n    \"notificationToken\": \"{{notificationToken}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trigger test notification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    triggerTestNotification {\n        userId\n        result\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)\r",
									"postman.setEnvironmentVariable('currentBranchName', jsonData.data.currentCompany.branches.nodes[0].name)\r",
									"postman.setEnvironmentVariable('currentBranchAddress', jsonData.data.currentCompany.branches.nodes[0].address)\r",
									"postman.setEnvironmentVariable('currentBranchPhoneNumber', jsonData.data.currentCompany.branches.nodes[0].phoneNumber.raw)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursDay', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].day)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursClosed', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].closed)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursBreak', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].break)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).end)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).end)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentProductId', jsonData.data.products.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    products(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            capacity\r\n            category\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    street\r\n                                    zipCode\r\n                                    city\r\n                                    birthday\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Services for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentServiceId', jsonData.data.services.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    services(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            duration\r\n            genderTarget\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    street\r\n                                    zipCode\r\n                                    city\r\n                                    birthday\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentAppointmentId', jsonData.data.customerRequestAppointment.appointment.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!, $productId: ID!, $serviceId: ID!) {\r\n    customerRequestAppointment(\r\n        input: {\r\n            branch: $branchId\r\n            data: {\r\n                start: \"2021-12-31T10:00:00+02:00\"\r\n                desc: \"Termin\"\r\n                services: [{\r\n                    id: $serviceId\r\n                }]\r\n                products: [{\r\n                    id: $productId\r\n                    count: 1\r\n                }]\r\n            }\r\n        }\r\n    ) {\r\n        appointment {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            desc\r\n            start\r\n            end\r\n            price {\r\n                value\r\n                displayValue\r\n            }\r\n            duration\r\n            status\r\n            note\r\n            beforeImage {\r\n                id\r\n                url\r\n            }\r\n            afterImage {\r\n                id\r\n                url\r\n            }\r\n            employee {\r\n                type\r\n                id\r\n                image {\r\n                    id\r\n                    url\r\n                }\r\n                createdAt\r\n                updatedAt\r\n                email\r\n                firstName\r\n                lastName\r\n                fullName\r\n                gender\r\n                phoneNumber {\r\n                    raw\r\n                    href\r\n                }\r\n                street\r\n                zipCode\r\n                city\r\n                birthday\r\n                # appointments\r\n            }\r\n            # customer\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"branchId\": \"{{currentBranchId}}\",\n\t\"serviceId\": \"{{currentServiceId}}\",\n\t\"productId\": \"{{currentProductId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"jane@employees.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Approve appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($appointmentId: ID!) {\n    staffApproveAppointment(\n        input: {\n            id: $appointmentId\n            patch: {\n                desc: \"Bestätigter Termin\"\n                note: \"Mehr Notiz zum Termin\"\n            }\n        }\n    ) {\n        appointment {\n            id\n            createdAt\n            updatedAt\n            desc\n            start\n            end\n            price {\n                value\n                displayValue\n            }\n            duration\n            status\n            note\n            beforeImage {\n                id\n                url\n            }\n            afterImage {\n                id\n                url\n            }\n            customer {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                note\n                street\n                zipCode\n                city\n                birthday\n                # appointments\n            }\n            # employee\n        }\n    }\n}",
								"variables": "{\n\t\"appointmentId\": \"{{currentAppointmentId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trigger appointment notification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($appointmentId: ID!) {\n    forceAppointmentNotification(\n        input: {\n            appointment: $appointmentId\n        }\n    ) {\n        userId\n        result\n    }\n}",
								"variables": "{\n\t\"appointmentId\": \"{{currentAppointmentId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customers for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCustomerId', jsonData.data.customers.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    customers(input:{}) {\r\n        nodes {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            note\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send notification to users",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($customerId: ID!) {\n    sendUserNotification(\n        input: {\n            title: \"Notification title\"\n            text: \"Notification text\"\n            users: [$customerId]\n        }\n    ) {\n        payloads {\n            userId\n            result\n        }\n    }\n}",
								"variables": "{\n\t\"customerId\": \"{{currentCustomerId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)\r",
									"postman.setEnvironmentVariable('currentBranchName', jsonData.data.currentCompany.branches.nodes[0].name)\r",
									"postman.setEnvironmentVariable('currentBranchAddress', jsonData.data.currentCompany.branches.nodes[0].address)\r",
									"postman.setEnvironmentVariable('currentBranchPhoneNumber', jsonData.data.currentCompany.branches.nodes[0].phoneNumber.raw)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursDay', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].day)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursClosed', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].closed)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursBreak', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].break)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).end)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).end)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send notification to all customers",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($companyId: ID!) {\n    notifyAllCustomers(\n        input: {\n            title: \"Notification title\"\n            text: \"Notification text\"\n            company: $companyId\n        }\n    ) {\n        payloads {\n            userId\n            result\n        }\n    }\n}",
								"variables": "{\n\t\"companyId\": \"{{currentCompanyId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"john@customers.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            notificationToken\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($appointmentId: ID!) {\n    cancelAppointment(\n        input: {\n            id: $appointmentId\n        }\n    ) {\n        appointment {\n            id\n            createdAt\n            updatedAt\n            desc\n            start\n            end\n            price {\n                value\n                displayValue\n            }\n            duration\n            status\n            note\n            beforeImage {\n                id\n                url\n            }\n            afterImage {\n                id\n                url\n            }\n            employee {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                street\n                zipCode\n                city\n                birthday\n                # appointments\n            }\n            viewerCanReview\n            # customer\n            # review\n        }\n    }\n}",
								"variables": "{\n\t\"appointmentId\": \"{{currentAppointmentId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Emails",
			"item": [
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)\r",
									"postman.setEnvironmentVariable('currentBranchName', jsonData.data.currentCompany.branches.nodes[0].name)\r",
									"postman.setEnvironmentVariable('currentBranchAddress', jsonData.data.currentCompany.branches.nodes[0].address)\r",
									"postman.setEnvironmentVariable('currentBranchPhoneNumber', jsonData.data.currentCompany.branches.nodes[0].phoneNumber.raw)\r",
									"postman.setEnvironmentVariable('currentBranchWelcomeMessage', jsonData.data.currentCompany.branches.nodes[0].welcomeMessage)\r",
									"postman.setEnvironmentVariable('currentBranchFontStyle', jsonData.data.currentCompany.branches.nodes[0].fontStyle)\r",
									"postman.setEnvironmentVariable('currentBranchColorScheme', jsonData.data.currentCompany.branches.nodes[0].colorScheme)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursDay', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].day)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursClosed', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].closed)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursBreak', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].break)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).end)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).end)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set email server",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!, $smtpHost: String, $smtpPort: String, $smtpUsername: String, $smtpPassword: String, $fromEmail: String) {\r\n    updateBranch(input: {\r\n        id: $branchId\r\n        patch: { \r\n            smtpSendHost: $smtpHost\r\n            smtpSendPort: $smtpPort\r\n            smtpUsername: $smtpUsername\r\n            smtpPassword: $smtpPassword\r\n            fromEmail: $fromEmail\r\n        }\r\n    }) {\r\n        branch {\r\n            id\r\n            smtpSendHost\r\n            smtpSendPort\r\n            smtpUsername\r\n            smtpPassword\r\n            fromEmail\r\n        }\r\n    }\r\n}",
								"variables": "{\r\n    \"branchId\": \"{{currentBranchId}}\",\r\n    \"smtpHost\": \"{{smtpHost}}\",\r\n    \"smtpPort\": \"{{smtpPort}}\",\r\n    \"smtpUsername\": \"{{smtpUsername}}\",\r\n    \"smtpPassword\": \"{{smtpPassword}}\",\r\n    \"fromEmail\": \"{{fromEmail}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send invite email",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!, $toEmail: String!) {\r\n    sendInviteEmail(input: {\r\n        email: $toEmail\r\n        name: \"Muster\"\r\n        gender: MALE\r\n        branch: $branchId\r\n    }) {\r\n        status\r\n    }\r\n}",
								"variables": "{\r\n    \"branchId\": \"{{currentBranchId}}\",\r\n    \"toEmail\": \"{{testInviteEmail}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Email templates life cycle",
			"item": [
				{
					"name": "Login as administrator",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"admin@example.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query email template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentTemplateId', jsonData.data.emailTemplate.template.id)\r",
									"postman.setEnvironmentVariable('previousTemplateTitle', jsonData.data.emailTemplate.template.title)\r",
									"postman.setEnvironmentVariable('previousTemplateContent', jsonData.data.emailTemplate.template.content.replace(/\\n/g, '\\\\n'))\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    emailTemplate(input: {\r\n        name: \"invite\"\r\n    }) {\r\n        template {\r\n            id\r\n            name\r\n            title\r\n            content\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update email template",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($templateId: ID!) {\r\n    updateEmailTemplate(input: {\r\n        id: $templateId\r\n        patch: {\r\n            title: \"Neuer Betreff\"\r\n            content: \"Neuer Text\"\r\n        }\r\n    }) {\r\n        template {\r\n            id\r\n            name\r\n            title\r\n            content\r\n        }\r\n    }\r\n}",
								"variables": "{\r\n    \"templateId\": \"{{currentTemplateId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore values",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($templateId: ID!, $previousTitle: String, $previousContent: String) {\r\n    updateEmailTemplate(input: {\r\n        id: $templateId\r\n        patch: {\r\n            title: $previousTitle\r\n            content: $previousContent\r\n        }\r\n    }) {\r\n        template {\r\n            id\r\n            name\r\n            title\r\n            content\r\n        }\r\n    }\r\n}",
								"variables": "{\r\n    \"templateId\": \"{{currentTemplateId}}\",\r\n    \"previousTitle\": \"{{previousTemplateTitle}}\",\r\n    \"previousContent\": \"{{previousTemplateContent}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sharing",
			"item": [
				{
					"name": "Share review",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/share/review/{{createdReviewId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"share",
								"review",
								"{{createdReviewId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Share appointment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/share/gallery/{{currentAppointmentId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"share",
								"gallery",
								"{{currentAppointmentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"john@customers.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            notificationToken\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Disable sharing",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    updateViewer(input: {\n        patch: {\n        }\n        allowReviewSharing: false\n    }) {\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable sharing",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    updateViewer(input: {\n        patch: {\n        }\n        allowReviewSharing: true\n    }) {\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Password reset",
			"item": [
				{
					"name": "Request password reset",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\r\n    requestPasswordReset(input:{\r\n        email: \"john@customers.com\"\r\n    }) {\r\n        status\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check valid",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($passwordToken: String!) {\r\n    isValidPasswordToken(token:$passwordToken) {\r\n        valid\r\n    }\r\n}",
								"variables": "{\r\n    \"passwordToken\": \"{{resetPasswordToken}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($passwordToken: String!) {\r\n    resetPassword(input:{\r\n        token: $passwordToken\r\n        password: \"asdfasdf\"\r\n    }) {\r\n        status\r\n    }\r\n}",
								"variables": "{\r\n    \"passwordToken\": \"{{resetPasswordToken}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Mailchimp Integration",
			"item": [
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									"postman.setEnvironmentVariable('loggedinUserId', jsonData.data.login.user.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)\r",
									"postman.setEnvironmentVariable('currentBranchName', jsonData.data.currentCompany.branches.nodes[0].name)\r",
									"postman.setEnvironmentVariable('currentBranchAddress', jsonData.data.currentCompany.branches.nodes[0].address)\r",
									"postman.setEnvironmentVariable('currentBranchPhoneNumber', jsonData.data.currentCompany.branches.nodes[0].phoneNumber.raw)\r",
									"postman.setEnvironmentVariable('currentBranchWelcomeMessage', jsonData.data.currentCompany.branches.nodes[0].welcomeMessage)\r",
									"postman.setEnvironmentVariable('currentBranchAppTheme', jsonData.data.currentCompany.branches.nodes[0].appTheme)\r",
									"postman.setEnvironmentVariable('currentBranchWebsiteUrl', jsonData.data.currentCompany.branches.nodes[0].websiteUrl)\r",
									"postman.setEnvironmentVariable('currentBranchNavigationLink', jsonData.data.currentCompany.branches.nodes[0].navigationLink)\r",
									"postman.setEnvironmentVariable('currentBranchSharingRedirectUrl', jsonData.data.currentCompany.branches.nodes[0].sharingRedirectUrl)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursDay', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].day)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursClosed', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].closed)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursBreak', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].break)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).end)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).end)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n                mailchimpApiKey\n                mailchimpListId\n                mailchimpCredentialsValid\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update manager",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($managerId: ID!) {\r\n    updateManager(\r\n        input: {\r\n            id: $managerId\r\n            patch: {\r\n                phoneNumber: \"0123456789\"\r\n                street: \"Am Ende 5\"\r\n                zipCode: \"56789\"\r\n                city: \"Musterhausen\"\r\n                birthday: \"1910-01-01\"\r\n            }\r\n            patchManager: {\r\n            }\r\n        }\r\n    ) {\r\n        manager {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            company {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                logo {\r\n                    id\r\n                    url\r\n                }\r\n                appTheme\r\n                sharingRedirectUrl\r\n                branches {\r\n                    nodes {\r\n                        id\r\n                        createdAt\r\n                        updatedAt\r\n                        name\r\n                        welcomeMessage\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        address\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        logo {\r\n                            id\r\n                            url\r\n                        }\r\n                        appTheme\r\n                        sharingRedirectUrl\r\n                        # company\r\n                        openingHours {\r\n                            formatted {\r\n                                key\r\n                                closed\r\n                                break\r\n                                shortDay\r\n                                fullDay\r\n                                value\r\n                            }\r\n                            raw {\r\n                                day\r\n                                closed\r\n                                break\r\n                                shortDay\r\n                                fullDay\r\n                                forenoon {\r\n                                    start\r\n                                    end\r\n                                }\r\n                                afternoon {\r\n                                    start\r\n                                    end\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            workingHours {\r\n                formatted {\r\n                    key\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    value\r\n                }\r\n                raw {\r\n                    day\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    forenoon {\r\n                        start\r\n                        end\r\n                    }\r\n                    afternoon {\r\n                        start\r\n                        end\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"managerId\": \"{{loggedinUserId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update branch",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!, $mailchimpApiKey: String!, $mailchimpListId: String!) {\r\n    updateBranch(input: {\r\n        id: $branchId\r\n        patch: {\r\n            mailchimpApiKey: $mailchimpApiKey\r\n            mailchimpListId: $mailchimpListId\r\n        }\r\n    }) {\r\n        branch {\r\n            id\r\n            mailchimpApiKey\r\n            mailchimpListId\r\n            mailchimpCredentialsValid\r\n        }\r\n    }\r\n}",
								"variables": "{\r\n    \"branchId\": \"{{currentBranchId}}\",\r\n    \"mailchimpApiKey\": \"{{mailchimpApiKey}}\",\r\n    \"mailchimpListId\": \"{{mailchimpListId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Subscribe",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!, $email: String!) {\r\n    subscribeNewsletter(\r\n        branchId: $branchId\r\n        email: $email\r\n    ) {\r\n        id\r\n        uniqueEmailID\r\n    }\r\n}",
								"variables": "{\r\n    \"branchId\": \"{{currentBranchId}}\",\r\n    \"email\": \"{{subscribeEmail}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Templates",
			"item": [
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update company pwaIcon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\": \"mutation($companyId: ID!, $pwaIconFile: Upload!) { updateCompany(input: { id: $companyId patch: { pwaIcon: $pwaIconFile } }) { company { id pwaIcon { id url } } } }\", \"variables\": {\"companyId\": \"{{currentCompanyId}}\",\"pwaIconFile\": null} } }",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.pwaIconFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/applogo.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "index.html",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/template/index",
							"host": [
								"{{host}}"
							],
							"path": [
								"template",
								"index"
							]
						}
					},
					"response": []
				},
				{
					"name": "manifest.json",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/template/webmanifest",
							"host": [
								"{{host}}"
							],
							"path": [
								"template",
								"webmanifest"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Soft Delete",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.register.session.token)\r",
									"postman.setEnvironmentVariable('registeredUserId', jsonData.data.register.user.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    register(input: {\n        email: \"gibs@nicht.de\"\n        password: \"asdfasdf\"\n        firstName: \"Gibs\"\n        lastName: \"Nicht\"\n        birthday: \"1950-01-01\"\n        gender: MALE\n        phoneNumber: \"0123456\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customers for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCustomerId', jsonData.data.customers.nodes[0].id)\r",
									"for (const customer of jsonData.data.customers.nodes) {\r",
									"    if (customer.email === 'gibs@nicht.de') {\r",
									"        postman.setEnvironmentVariable('deletedCustomerId', customer.id)\r",
									"    }\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    customers(input:{}) {\r\n        nodes {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            note\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                    ... on ProductReview {\r\n                        product {\r\n                            id\r\n                            name\r\n                        }\r\n                    }\r\n                    ... on ServiceReview {\r\n                        service {\r\n                            id\r\n                            name\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete customer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($customerId: ID!) {\r\n    deleteCustomer(\r\n        input: {\r\n            id: $customerId\r\n        }\r\n    ) {\r\n        customer {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            note\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"customerId\": \"{{deletedCustomerId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"gibs@nicht.de\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customers for current company (after Delete)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCustomerId', jsonData.data.customers.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    customers(input:{}) {\r\n        nodes {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            note\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                    ... on ProductReview {\r\n                        product {\r\n                            id\r\n                            name\r\n                        }\r\n                    }\r\n                    ... on ServiceReview {\r\n                        service {\r\n                            id\r\n                            name\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdProductId', jsonData.data.createProduct.product.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\":\"mutation($branchId: ID!, $imageFile: Upload) { createProduct(input: { branch: $branchId, data: { name: \\\"Produkt\\\", desc: \\\"Kann Dinge\\\", price: 1.21, capacity: \\\"Viel\\\", category: \\\"Produkte\\\", image: $imageFile, attributes:[{ key: \\\"category\\\", name: \\\"Kategorie\\\", value: \\\"Sonderangebote\\\"}, { key: \\\"origin\\\", name: \\\"Herkunft\\\", value: \\\"Deutschland\\\"}] }}) { product { id, createdAt, updatedAt, name, desc, price { value, displayValue }, capacity, category, image { id, url } attributes { key name value }             reviewAggregations { totalCount averageRating countPerStar } reviews { nodes { id createdAt updatedAt stars title text type customer { type id image { id url } createdAt updatedAt email firstName lastName fullName gender note phoneNumber { raw href } street city zipCode birthday appointments { nodes { id createdAt updatedAt desc start end price { value displayValue } duration status note beforeImage { id url } afterImage { id url } employee { type id image { id url } createdAt updatedAt email firstName lastName fullName gender phoneNumber { raw href } } } } } } } }}}\", \"variables\":{\"branchId\":\"{{currentBranchId}}\", \"imageFile\":null}}",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img1.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($productId: ID!) {\n    deleteProduct(input: { id: $productId }) {\n        product {\n            id\n            createdAt\n            updatedAt\n            name\n            desc\n            price {\n                value\n                displayValue\n            }\n            capacity\n            category\n            image {\n                id\n                url\n            }\n            # reviews\n        }\n    }\n}",
								"variables": "{\n\t\"productId\": \"{{createdProductId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\":\"mutation($productId: ID!, $imageFile: Upload) { updateProduct(input: { id: $productId, patch: { name: \\\"Produktchen\\\", desc: \\\"Kann mehr Dinge\\\", price: 42, capacity: \\\"Viel\\\", category: \\\"Produkte\\\", image: $imageFile, attributes:[{ key: \\\"category\\\", value: \\\"Sonstiges\\\"}, { key: \\\"vendor\\\", name: \\\"Anbieter\\\", value: \\\"Acme Corp.\\\"}], removeAttributes:[\\\"origin\\\"]}}) { product { id, createdAt, updatedAt, name, desc, price { value, displayValue }, capacity, category, image { id, url } attributes {key name value} reviewAggregations { totalCount averageRating countPerStar } reviews { nodes { id createdAt updatedAt stars title text type customer { type id image { id url } createdAt updatedAt email firstName lastName fullName gender note phoneNumber { raw href } street city zipCode birthday appointments { nodes { id createdAt updatedAt desc start end price { value displayValue } duration status note beforeImage { id url } afterImage { id url } employee { type id image { id url } createdAt updatedAt email firstName lastName fullName gender phoneNumber { raw href } } } } } } } }}}\", \"variables\":{\"productId\":\"{{createdProductId}}\", \"imageFile\":null}}",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img2.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    products(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            capacity\r\n            category\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            attributes {\r\n                key\r\n                name\r\n                value\r\n            }\r\n            viewerCanReview\r\n            viewerReview {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                stars\r\n                title\r\n                text\r\n                type\r\n                status\r\n                customer {\r\n                    type\r\n                    id\r\n                    image {\r\n                        id\r\n                        url\r\n                    }\r\n                    createdAt\r\n                    updatedAt\r\n                    email\r\n                    firstName\r\n                    lastName\r\n                    fullName\r\n                    gender\r\n                    note\r\n                    phoneNumber {\r\n                        raw\r\n                        href\r\n                    }\r\n                    appointments {\r\n                        nodes {\r\n                            id\r\n                            createdAt\r\n                            updatedAt\r\n                            desc\r\n                            start\r\n                            end\r\n                            price {\r\n                                value\r\n                                displayValue\r\n                            }\r\n                            duration\r\n                            status\r\n                            note\r\n                            beforeImage {\r\n                                id\r\n                                url\r\n                            }\r\n                            afterImage {\r\n                                id\r\n                                url\r\n                            }\r\n                            employee {\r\n                                type\r\n                                id\r\n                                image {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                createdAt\r\n                                updatedAt\r\n                                email\r\n                                firstName\r\n                                lastName\r\n                                fullName\r\n                                gender\r\n                                phoneNumber {\r\n                                    raw\r\n                                    href\r\n                                }\r\n                                # appointments\r\n                            }\r\n                            # customer\r\n                        }\r\n                    }\r\n                    # reviews\r\n                }\r\n            }\r\n            reviewAggregations {\r\n                totalCount\r\n                averageRating\r\n                countPerStar\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    status\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Cron Jobs",
			"item": [
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)\r",
									"postman.setEnvironmentVariable('currentBranchId', jsonData.data.currentCompany.branches.nodes[0].id)\r",
									"postman.setEnvironmentVariable('currentBranchName', jsonData.data.currentCompany.branches.nodes[0].name)\r",
									"postman.setEnvironmentVariable('currentBranchAddress', jsonData.data.currentCompany.branches.nodes[0].address)\r",
									"postman.setEnvironmentVariable('currentBranchPhoneNumber', jsonData.data.currentCompany.branches.nodes[0].phoneNumber.raw)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursDay', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].day)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursClosed', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].closed)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursBreak', jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].break)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursForenoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].forenoon || {}).end)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoon', JSON.stringify(jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon))\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonStart', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).start)\r",
									"postman.setEnvironmentVariable('currentBranchOpeningHoursAfternoonEnd', (jsonData.data.currentCompany.branches.nodes[0].openingHours.raw[0].afternoon || {}).end)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentProductId', jsonData.data.products.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    products(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            capacity\r\n            category\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    street\r\n                                    zipCode\r\n                                    city\r\n                                    birthday\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Services for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentServiceId', jsonData.data.services.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    services(input:{}) {\r\n        nodes {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            desc\r\n            price {\r\n                value\r\n                displayValue\r\n        \t}\r\n            duration\r\n            genderTarget\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        note\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        appointments {\r\n                            nodes {\r\n                                id\r\n                                createdAt\r\n                                updatedAt\r\n                                desc\r\n                                start\r\n                                end\r\n                                price {\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                                duration\r\n                                status\r\n                                note\r\n                                beforeImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                afterImage {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                employee {\r\n                                    type\r\n                                    id\r\n                                    image {\r\n                                        id\r\n                                        url\r\n                                    }\r\n                                    createdAt\r\n                                    updatedAt\r\n                                    email\r\n                                    firstName\r\n                                    lastName\r\n                                    fullName\r\n                                    gender\r\n                                    phoneNumber {\r\n                                        raw\r\n                                        href\r\n                                    }\r\n                                    street\r\n                                    zipCode\r\n                                    city\r\n                                    birthday\r\n                                    # appointments\r\n                                }\r\n                                # customer\r\n                            }\r\n                        }\r\n                        # reviews\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customers for current company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCustomerId', jsonData.data.customers.nodes[0].id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    customers(input:{}) {\r\n        nodes {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            note\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        street\r\n                        zipCode\r\n                        city\r\n                        birthday\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee create appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentAppointmentId', jsonData.data.staffCreateAppointment.appointment.id)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function toIsoString(date) {\r",
									"  var tzo = -date.getTimezoneOffset(),\r",
									"      dif = tzo >= 0 ? '+' : '-',\r",
									"      pad = function(num) {\r",
									"          var norm = Math.floor(Math.abs(num));\r",
									"          return (norm < 10 ? '0' : '') + norm;\r",
									"      };\r",
									"\r",
									"  return date.getFullYear() +\r",
									"      '-' + pad(date.getMonth() + 1) +\r",
									"      '-' + pad(date.getDate()) +\r",
									"      'T' + pad(date.getHours()) +\r",
									"      ':' + pad(date.getMinutes()) +\r",
									"      ':' + pad(date.getSeconds()) +\r",
									"      dif + pad(tzo / 60) +\r",
									"      ':' + pad(tzo % 60);\r",
									"}\r",
									"\r",
									"var appointmentStartDate = new Date();\r",
									"appointmentStartDate.setHours(10)\r",
									"appointmentStartDate.setMinutes(0)\r",
									"appointmentStartDate.setSeconds(0)\r",
									"appointmentStartDate.setDate(appointmentStartDate.getDate() + 1)\r",
									"\r",
									"postman.setEnvironmentVariable('appointmentStartDate', toIsoString(appointmentStartDate))\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!, $productId: ID!, $serviceId: ID!, $customerId: ID!, $appointmentStart: Time!) {\r\n    staffCreateAppointment(\r\n        input: {\r\n            branch: $branchId\r\n            customer: $customerId\r\n            data: {\r\n                start: $appointmentStart\r\n                desc: \"Termin\"\r\n                services: [{\r\n                    id: $serviceId\r\n                }]\r\n                products: [{\r\n                    id: $productId\r\n                    count: 1\r\n                }]\r\n            }\r\n        }\r\n    ) {\r\n        appointment {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            desc\r\n            start\r\n            end\r\n            price {\r\n                value\r\n                displayValue\r\n            }\r\n            duration\r\n            status\r\n            note\r\n            beforeImage {\r\n                id\r\n                url\r\n            }\r\n            afterImage {\r\n                id\r\n                url\r\n            }\r\n            customer {\r\n                type\r\n                id\r\n                image {\r\n                    id\r\n                    url\r\n                }\r\n                createdAt\r\n                updatedAt\r\n                email\r\n                firstName\r\n                lastName\r\n                fullName\r\n                gender\r\n                phoneNumber {\r\n                    raw\r\n                    href\r\n                }\r\n                note\r\n                street\r\n                zipCode\r\n                city\r\n                birthday\r\n                # appointments\r\n            }\r\n            # employee\r\n            viewerCanReview\r\n            review {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                stars\r\n                title\r\n                text\r\n                type\r\n                customer {\r\n                    type\r\n                    id\r\n                    image {\r\n                        id\r\n                        url\r\n                    }\r\n                    createdAt\r\n                    updatedAt\r\n                    email\r\n                    firstName\r\n                    lastName\r\n                    fullName\r\n                    gender\r\n                    phoneNumber {\r\n                        raw\r\n                        href\r\n                    }\r\n                    note\r\n                    street\r\n                    zipCode\r\n                    city\r\n                    birthday\r\n                    appointments {\r\n                        nodes {\r\n                            id\r\n                            createdAt\r\n                            updatedAt\r\n                            desc\r\n                            start\r\n                            end\r\n                            price {\r\n                                value\r\n                                displayValue\r\n                            }\r\n                            duration\r\n                            status\r\n                            note\r\n                            beforeImage {\r\n                                id\r\n                                url\r\n                            }\r\n                            afterImage {\r\n                                id\r\n                                url\r\n                            }\r\n                            employee {\r\n                                type\r\n                                id\r\n                                image {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                createdAt\r\n                                updatedAt\r\n                                email\r\n                                firstName\r\n                                lastName\r\n                                fullName\r\n                                gender\r\n                                phoneNumber {\r\n                                    raw\r\n                                    href\r\n                                }\r\n                                street\r\n                                zipCode\r\n                                city\r\n                                birthday\r\n                                # appointments\r\n                            }\r\n                            # customer\r\n                        }\r\n                    }\r\n                    # reviews\r\n                }\r\n                # appointment\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"branchId\": \"{{currentBranchId}}\",\n\t\"customerId\": \"{{currentCustomerId}}\",\n\t\"serviceId\": \"{{currentServiceId}}\",\n\t\"productId\": \"{{currentProductId}}\",\n    \"appointmentStart\": \"{{appointmentStartDate}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee create appointment Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentAppointmentId', jsonData.data.staffCreateAppointment.appointment.id)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function toIsoString(date) {\r",
									"  var tzo = -date.getTimezoneOffset(),\r",
									"      dif = tzo >= 0 ? '+' : '-',\r",
									"      pad = function(num) {\r",
									"          var norm = Math.floor(Math.abs(num));\r",
									"          return (norm < 10 ? '0' : '') + norm;\r",
									"      };\r",
									"\r",
									"  return date.getFullYear() +\r",
									"      '-' + pad(date.getMonth() + 1) +\r",
									"      '-' + pad(date.getDate()) +\r",
									"      'T' + pad(date.getHours()) +\r",
									"      ':' + pad(date.getMinutes()) +\r",
									"      ':' + pad(date.getSeconds()) +\r",
									"      dif + pad(tzo / 60) +\r",
									"      ':' + pad(tzo % 60);\r",
									"}\r",
									"\r",
									"var appointmentStartDate = Date.now() + 45 * 60 * 1000;\r",
									"\r",
									"postman.setEnvironmentVariable('appointmentStartDate', toIsoString(new Date(appointmentStartDate)))\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!, $productId: ID!, $serviceId: ID!, $customerId: ID!, $appointmentStart: Time!) {\r\n    staffCreateAppointment(\r\n        input: {\r\n            branch: $branchId\r\n            customer: $customerId\r\n            data: {\r\n                start: $appointmentStart\r\n                desc: \"Termin\"\r\n                services: [{\r\n                    id: $serviceId\r\n                }]\r\n                products: [{\r\n                    id: $productId\r\n                    count: 1\r\n                }]\r\n            }\r\n        }\r\n    ) {\r\n        appointment {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            desc\r\n            start\r\n            end\r\n            price {\r\n                value\r\n                displayValue\r\n            }\r\n            duration\r\n            status\r\n            note\r\n            beforeImage {\r\n                id\r\n                url\r\n            }\r\n            afterImage {\r\n                id\r\n                url\r\n            }\r\n            customer {\r\n                type\r\n                id\r\n                image {\r\n                    id\r\n                    url\r\n                }\r\n                createdAt\r\n                updatedAt\r\n                email\r\n                firstName\r\n                lastName\r\n                fullName\r\n                gender\r\n                phoneNumber {\r\n                    raw\r\n                    href\r\n                }\r\n                note\r\n                street\r\n                zipCode\r\n                city\r\n                birthday\r\n                # appointments\r\n            }\r\n            # employee\r\n            viewerCanReview\r\n            review {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                stars\r\n                title\r\n                text\r\n                type\r\n                customer {\r\n                    type\r\n                    id\r\n                    image {\r\n                        id\r\n                        url\r\n                    }\r\n                    createdAt\r\n                    updatedAt\r\n                    email\r\n                    firstName\r\n                    lastName\r\n                    fullName\r\n                    gender\r\n                    phoneNumber {\r\n                        raw\r\n                        href\r\n                    }\r\n                    note\r\n                    street\r\n                    zipCode\r\n                    city\r\n                    birthday\r\n                    appointments {\r\n                        nodes {\r\n                            id\r\n                            createdAt\r\n                            updatedAt\r\n                            desc\r\n                            start\r\n                            end\r\n                            price {\r\n                                value\r\n                                displayValue\r\n                            }\r\n                            duration\r\n                            status\r\n                            note\r\n                            beforeImage {\r\n                                id\r\n                                url\r\n                            }\r\n                            afterImage {\r\n                                id\r\n                                url\r\n                            }\r\n                            employee {\r\n                                type\r\n                                id\r\n                                image {\r\n                                    id\r\n                                    url\r\n                                }\r\n                                createdAt\r\n                                updatedAt\r\n                                email\r\n                                firstName\r\n                                lastName\r\n                                fullName\r\n                                gender\r\n                                phoneNumber {\r\n                                    raw\r\n                                    href\r\n                                }\r\n                                street\r\n                                zipCode\r\n                                city\r\n                                birthday\r\n                                # appointments\r\n                            }\r\n                            # customer\r\n                        }\r\n                    }\r\n                    # reviews\r\n                }\r\n                # appointment\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"branchId\": \"{{currentBranchId}}\",\n\t\"customerId\": \"{{currentCustomerId}}\",\n\t\"serviceId\": \"{{currentServiceId}}\",\n\t\"productId\": \"{{currentProductId}}\",\n    \"appointmentStart\": \"{{appointmentStartDate}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($appointmentId: ID!) {\n    cancelAppointment(\n        input: {\n            id: $appointmentId\n        }\n    ) {\n        appointment {\n            id\n            createdAt\n            updatedAt\n            desc\n            start\n            end\n            price {\n                value\n                displayValue\n            }\n            duration\n            status\n            note\n            beforeImage {\n                id\n                url\n            }\n            afterImage {\n                id\n                url\n            }\n            employee {\n                type\n                id\n                image {\n                    id\n                    url\n                }\n                createdAt\n                updatedAt\n                email\n                firstName\n                lastName\n                fullName\n                gender\n                phoneNumber {\n                    raw\n                    href\n                }\n                street\n                zipCode\n                city\n                birthday\n                # appointments\n            }\n            viewerCanReview\n            # customer\n            # review\n        }\n    }\n}",
								"variables": "{\n\t\"appointmentId\": \"{{currentAppointmentId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"maggy@hairdesign.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('currentCompanyId', jsonData.data.currentCompany.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    currentCompany {\n        id\n        createdAt\n        updatedAt\n        name\n        logo {\n            id\n            url\n        }\n        appTheme\n        sharingRedirectUrl\n        pwaShortName\n        pwaIcon {\n            id\n            url\n        }\n        pwaThemeColor\n        pwaBackgroundColor\n        branches {\n            nodes {\n                id\n                createdAt\n                updatedAt\n                name\n                welcomeMessage\n                phoneNumber {\n                    raw\n                    href\n                }\n                address\n                image {\n                    id\n                    url\n                }\n                logo {\n                    id\n                    url\n                }\n                appTheme\n                sharingRedirectUrl\n                imprint\n                # company\n                openingHours {\n                    formatted {\n                        key\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        value\n                    }\n                    raw {\n                        day\n                        closed\n                        break\n                        shortDay\n                        fullDay\n                        forenoon {\n                            start\n                            end\n                        }\n                        afternoon {\n                            start\n                            end\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdCustomerId', jsonData.data.createCustomer.customer.id)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function toIsoString(date) {\r",
									"  var tzo = -date.getTimezoneOffset(),\r",
									"      dif = tzo >= 0 ? '+' : '-',\r",
									"      pad = function(num) {\r",
									"          var norm = Math.floor(Math.abs(num));\r",
									"          return (norm < 10 ? '0' : '') + norm;\r",
									"      };\r",
									"\r",
									"  return date.getFullYear() +\r",
									"      '-' + pad(date.getMonth() + 1) +\r",
									"      '-' + pad(date.getDate()) +\r",
									"      'T' + pad(date.getHours()) +\r",
									"      ':' + pad(date.getMinutes()) +\r",
									"      ':' + pad(date.getSeconds()) +\r",
									"      dif + pad(tzo / 60) +\r",
									"      ':' + pad(tzo % 60);\r",
									"}\r",
									"\r",
									"var customerBirthDayDate = new Date();\r",
									"customerBirthDayDate.setDate(customerBirthDayDate.getDate() + 1)\r",
									"customerBirthDayDate.setFullYear(1950)\r",
									"\r",
									"postman.setEnvironmentVariable('customerBirthDayDate', toIsoString(customerBirthDayDate).slice(0, 10))\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($companyId: ID!, $customerBirthDay: String!) {\r\n    createCustomer(\r\n        input: {\r\n            company: $companyId\r\n            user: {\r\n                email: \"gibs2@nicht.de\"\r\n                firstName: \"Ali\"\r\n                lastName: \"Gator\"\r\n                gender: MALE\r\n                phoneNumber: \"12345\"\r\n                street: \"Straße 1\"\r\n                zipCode: \"01234\"\r\n                city: \"Musterstadt\"\r\n                birthday: $customerBirthDay\r\n            }\r\n            customer: {\r\n                note: \"Ganz wichtig!\"\r\n                allowReviewSharing: false\r\n            }\r\n        }\r\n    ) {\r\n        customer {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            note\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"companyId\": \"{{currentCompanyId}}\",\n    \"customerBirthDay\": \"{{customerBirthDayDate}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete customer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($customerId: ID!) {\r\n    deleteCustomer(\r\n        input: {\r\n            id: $customerId\r\n        }\r\n    ) {\r\n        customer {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            note\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            reviews {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    stars\r\n                    title\r\n                    text\r\n                    type\r\n                    # customer\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"customerId\": \"{{createdCustomerId}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Employee Password Reset",
			"item": [
				{
					"name": "Login as administrator",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(input: {\n        email: \"admin@example.com\"\n        password: \"asdfasdf\"\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdCompanyId', jsonData.data.createCompany.company.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{\"query\": \"mutation($logoFile:Upload!, $pwaIconFile:Upload!) { createCompany(input: { data: { name: \\\"Neue Firma\\\" aliases: [\\\"abc\\\"] customUrls: [\\\"example.com\\\"] sharingRedirectUrl: \\\"share.me\\\" logo: $logoFile appTheme: \\\"classic\\\" pwaShortName:\\\"PWA Name\\\" pwaIcon: $pwaIconFile pwaThemeColor:\\\"black\\\" pwaBackgroundColor:\\\"black\\\" } }) { company { id createdAt updatedAt name logo { id url } appTheme aliases customUrls sharingRedirectUrl pwaShortName pwaIcon { id url } pwaThemeColor pwaBackgroundColor branches { nodes { id createdAt updatedAt name welcomeMessage phoneNumber { raw href } address image { id url } openingHours { formatted { key closed break shortDay fullDay value } raw { day closed break shortDay fullDay forenoon { start end } afternoon { start end } } } } } } } }\", \"variables\": {\"logoFile\": null,\"pwaIconFile\":null } } }",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.logoFile\"], \"1\":[\"variables.pwaIconFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img2.jpg"
								},
								{
									"key": "1",
									"type": "file",
									"src": "fixtures/img4.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create branch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdBranchId', jsonData.data.createBranch.branch.id)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "operations",
									"value": "{ \"query\": \"mutation($companyId: ID!, $imageFile: Upload!, $logoFile:Upload!) { createBranch(input: { company: $companyId data: { name: \\\"Neue Filiale\\\" phoneNumber: \\\"23456\\\" address: \\\"In der Straße 1, 23456 Einstadt\\\" welcomeMessage: \\\"Willkommen in unserer neuen Filiale!\\\" image: $imageFile logo: $logoFile appTheme: \\\"classic\\\" smtpSendHost: \\\"{{smtpHost}}\\\" smtpSendPort: \\\"{{smtpPort}}\\\" smtpUsername: \\\"{{smtpUsername}}\\\" smtpPassword: \\\"{{smtpPassword}}\\\" fromEmail: \\\"{{fromEmail}}\\\" websiteUrl: \\\"https://bing.com\\\" navigationLink: \\\"https://maps.google.com\\\" sharingRedirectUrl:\\\"share.me\\\" imprint:\\\"Maggy Foster\\\\nHaardesign Neue Filiale\\\\nIn der Straße 1, 23456 Einstadt\\\\nTelefon: 23456\\\" } }) { branch { id createdAt updatedAt name welcomeMessage phoneNumber { raw href } address image { id url } logo { id url } appTheme company { id createdAt updatedAt name logo { id url } appTheme sharingRedirectUrl } openingHours { formatted { key closed break shortDay fullDay value } raw { day closed break shortDay fullDay forenoon { start end } afternoon { start end } } } news { id createdAt updatedAt title image { id url } } smtpSendHost smtpSendPort smtpUsername smtpPassword fromEmail websiteUrl navigationLink sharingRedirectUrl imprint } } }\", \"variables\": { \"companyId\": \"{{createdCompanyId}}\", \"imageFile\": null, \"logoFile\": null } }",
									"type": "text"
								},
								{
									"key": "map",
									"value": "{\"0\":[\"variables.imageFile\"], \"1\":[\"variables.logoFile\"]}",
									"type": "text"
								},
								{
									"key": "0",
									"type": "file",
									"src": "fixtures/img1.jpg"
								},
								{
									"key": "1",
									"type": "file",
									"src": "fixtures/img2.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdManagerId', jsonData.data.createManager.manager.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($companyId: ID!, $email: String!) {\r\n    createManager(\r\n        input: {\r\n            company: $companyId\r\n            user: {\r\n                email: $email\r\n                firstName: \"Man\"\r\n                lastName: \"Ager\"\r\n                gender: MALE\r\n                phoneNumber: \"000000000\"\r\n                street: \"Weg 2\"\r\n                zipCode: \"34567\"\r\n                city: \"Musterdorf\"\r\n                birthday: \"1900-01-01\"\r\n            }\r\n            manager: {\r\n                workingHours: {\r\n                    day: MO\r\n                    notWorking: false\r\n                    break:true\r\n                    forenoon: {\r\n                        start: \"2020-05-28T00:00:00+02:00\"\r\n                        end: \"2020-05-28T11:00:00+02:00\"\r\n                    }\r\n                    afternoon: {\r\n                        start: \"2020-05-28T13:00:00+02:00\"\r\n                        end: \"2020-05-28T23:59:59+02:00\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ) {\r\n        manager {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    employee {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            company {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                logo {\r\n                    id\r\n                    url\r\n                }\r\n                appTheme\r\n                sharingRedirectUrl\r\n                branches {\r\n                    nodes {\r\n                        id\r\n                        createdAt\r\n                        updatedAt\r\n                        name\r\n                        welcomeMessage\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        address\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        logo {\r\n                            id\r\n                            url\r\n                        }\r\n                        appTheme\r\n                        sharingRedirectUrl\r\n                        # company\r\n                        openingHours {\r\n                            formatted {\r\n                                key\r\n                                closed\r\n                                break\r\n                                shortDay\r\n                                fullDay\r\n                                value\r\n                            }\r\n                            raw {\r\n                                day\r\n                                closed\r\n                                break\r\n                                shortDay\r\n                                fullDay\r\n                                forenoon {\r\n                                    start\r\n                                    end\r\n                                }\r\n                                afternoon {\r\n                                    start\r\n                                    end\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            workingHours {\r\n                formatted {\r\n                    key\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    value\r\n                }\r\n                raw {\r\n                    day\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    forenoon {\r\n                        start\r\n                        end\r\n                    }\r\n                    afternoon {\r\n                        start\r\n                        end\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"companyId\": \"{{createdCompanyId}}\",\n    \"email\": \"{{managerEmail}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Activation Link (Manager)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($email: String!, $companyId: ID!) {\n    requestActivationLink(input:{\n        email: $email\n        company: $companyId\n    }) {\n        status\n    }\n}",
								"variables": "{\r\n    \"email\": \"{{managerEmail}}\",\r\n    \"companyId\": \"{{createdCompanyId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($token:String!) {\n    activateAccount(input:{\n        token: $token\n    }) {\n        status\n    }\n}",
								"variables": "{\r\n    \"token\": \"{{activationToken}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request password reset (Manager)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($email: String!, $companyId: ID!) {\r\n    requestPasswordReset(input:{\r\n        email: $email,\r\n        company: $companyId\r\n    }) {\r\n        status\r\n    }\r\n}",
								"variables": "{\r\n    \"email\": \"{{registerEmail}}\",\r\n    \"companyId\": \"{{createdCompanyId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($passwordToken: String!) {\r\n    resetPassword(input:{\r\n        token: $passwordToken\r\n        password: \"asdfasdf\"\r\n    }) {\r\n        status\r\n    }\r\n}",
								"variables": "{\r\n    \"passwordToken\": \"{{resetPasswordToken}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as manager",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($email: String!, $companyId: ID!) {\n    login(input: {\n        email: $email\n        password: \"asdfasdf\"\n        company: $companyId\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": "{\r\n\t\"companyId\": \"{{createdCompanyId}}\",\r\n    \"email\": \"{{managerEmail}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('createdEmployeeId', jsonData.data.createEmployee.employee.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($branchId: ID!,$email:String!) {\r\n    createEmployee(\r\n        input: {\r\n            branch: $branchId\r\n            data: {\r\n                email: $email\r\n                firstName: \"Ar\"\r\n                lastName: \"Beiter\"\r\n                gender: MALE\r\n                phoneNumber: \"12345\"\r\n                street: \"Straße 1\"\r\n                zipCode: \"01234\"\r\n                city: \"Musterstadt\"\r\n                birthday: \"1900-01-01\"\r\n            }\r\n            employee: {\r\n                workingHours: {\r\n                    day: MO\r\n                    notWorking: false\r\n                    break:true\r\n                    forenoon: {\r\n                        start: \"2020-05-28T00:00:00+02:00\"\r\n                        end: \"2020-05-28T11:00:00+02:00\"\r\n                    }\r\n                    afternoon: {\r\n                        start: \"2020-05-28T13:00:00+02:00\"\r\n                        end: \"2020-05-28T23:59:59+02:00\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ) {\r\n        employee {\r\n            type\r\n            id\r\n            image {\r\n                id\r\n                url\r\n            }\r\n            createdAt\r\n            updatedAt\r\n            email\r\n            firstName\r\n            lastName\r\n            fullName\r\n            gender\r\n            phoneNumber {\r\n                raw\r\n                href\r\n            }\r\n            street\r\n            zipCode\r\n            city\r\n            birthday\r\n            appointments {\r\n                nodes {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    desc\r\n                    start\r\n                    end\r\n                    price {\r\n                        value\r\n                        displayValue\r\n                    }\r\n                    duration\r\n                    status\r\n                    note\r\n                    beforeImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    afterImage {\r\n                        id\r\n                        url\r\n                    }\r\n                    customer {\r\n                        type\r\n                        id\r\n                        image {\r\n                            id\r\n                            url\r\n                        }\r\n                        createdAt\r\n                        updatedAt\r\n                        email\r\n                        firstName\r\n                        lastName\r\n                        fullName\r\n                        gender\r\n                        phoneNumber {\r\n                            raw\r\n                            href\r\n                        }\r\n                        # appointments\r\n                    }\r\n                    # customer\r\n                }\r\n            }\r\n            workingHours {\r\n                formatted {\r\n                    key\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    value\r\n                }\r\n                raw {\r\n                    day\r\n                    notWorking\r\n                    break\r\n                    shortDay\r\n                    fullDay\r\n                    forenoon {\r\n                        start\r\n                        end\r\n                    }\r\n                    afternoon {\r\n                        start\r\n                        end\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\n\t\"branchId\": \"{{currentBranchId}}\",\n    \"email\": \"{{registerEmail}}\"\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Activation Link (Employee)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($email: String!, $companyId: ID!) {\n    requestActivationLink(input:{\n        email: $email\n        company: $companyId\n    }) {\n        status\n    }\n}",
								"variables": "{\r\n    \"email\": \"{{registerEmail}}\",\r\n    \"companyId\": \"{{createdCompanyId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($token:String!) {\n    activateAccount(input:{\n        token: $token\n    }) {\n        status\n    }\n}",
								"variables": "{\r\n    \"token\": \"{{activationToken}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($passwordToken: String!) {\r\n    resetPassword(input:{\r\n        token: $passwordToken\r\n        password: \"asdfasdf\"\r\n    }) {\r\n        status\r\n    }\r\n}",
								"variables": "{\r\n    \"passwordToken\": \"{{resetPasswordToken}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as employee Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('authorizationToken', jsonData.data.login.session.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($email: String!, $companyId: ID!) {\n    login(input: {\n        email: $email\n        password: \"asdfasdf\"\n        company: $companyId\n    }) {\n        session {\n            id\n            token\n        }\n        user {\n            type\n            id\n            image {\n                id\n                url\n            }\n            createdAt\n            updatedAt\n            email\n            firstName\n            lastName\n            fullName\n            gender\n            phoneNumber {\n                raw\n                href\n            }\n            street\n            zipCode\n            city\n            birthday\n        }\n    }\n}",
								"variables": "{\r\n    \"email\": \"{{registerEmail}}\",\r\n    \"companyId\": \"{{createdCompanyId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request password reset (Employee)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($email: String!, $companyId: ID!) {\r\n    requestPasswordReset(input:{\r\n        email: $email,\r\n        company: $companyId\r\n    }) {\r\n        status\r\n    }\r\n}",
								"variables": "{\r\n    \"email\": \"{{managerEmail}}\",\r\n    \"companyId\": \"{{createdCompanyId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{host}}/api/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authorizationToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.upsert({",
					"    key: \"X-Language\",",
					"    value: \"{{language}}\"",
					"})"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"status ok\", function () {",
					"    pm.response.to.have.status(200)",
					"})",
					"try {",
					"    var jsonData = JSON.parse(responseBody)",
					"    pm.test(\"no errors\", function() {",
					"        pm.response.to.not.have.jsonBody('errors')",
					"    })",
					"} catch {",
					"}"
				]
			}
		}
	]
}